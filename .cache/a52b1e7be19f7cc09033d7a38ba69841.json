{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/tsconfig.json","includedInParent":true,"mtime":1527650976754},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"koa-router","loc":{"line":46,"column":37}}],"generated":{"js":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : new P(function (resolve) {\n                resolve(result.value);\n            }).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n    var _ = { label: 0, sent: function sent() {\n            if (t[0] & 1) throw t[1];return t[1];\n        }, trys: [], ops: [] },\n        f,\n        y,\n        t,\n        g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n        return this;\n    }), g;\n    function verb(n) {\n        return function (v) {\n            return step([n, v]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) {\n            try {\n                if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n                if (y = 0, t) op = [0, t.value];\n                switch (op[0]) {\n                    case 0:case 1:\n                        t = op;break;\n                    case 4:\n                        _.label++;return { value: op[1], done: false };\n                    case 5:\n                        _.label++;y = op[1];op = [0];continue;\n                    case 7:\n                        op = _.ops.pop();_.trys.pop();continue;\n                    default:\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                            _ = 0;continue;\n                        }\n                        if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                            _.label = op[1];break;\n                        }\n                        if (op[0] === 6 && _.label < t[1]) {\n                            _.label = t[1];t = op;break;\n                        }\n                        if (t && _.label < t[2]) {\n                            _.label = t[2];_.ops.push(op);break;\n                        }\n                        if (t[2]) _.ops.pop();\n                        _.trys.pop();continue;\n                }\n                op = body.call(thisArg, _);\n            } catch (e) {\n                op = [6, e];y = 0;\n            } finally {\n                f = t = 0;\n            }\n        }if (op[0] & 5) throw op[1];return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) {\n        if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    }result[\"default\"] = mod;\n    return result;\n};\nvar _this = this;\nexports.__esModule = true;\nvar KoaRouter = __importStar(require(\"koa-router\"));\nexports.LoginRouter = new KoaRouter({ prefix: 'login' }).post('/', function (ctx, next) {\n    return __awaiter(_this, void 0, void 0, function () {\n        var error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2,, 3]);\n                    return [4 /*yield*/, ctx.login(ctx.request.body)];\n                case 1:\n                    _a.sent();\n                    ctx.res.statusCode = 200;\n                    return [3 /*break*/, 3];\n                case 2:\n                    error_1 = _a.sent();\n                    ctx.res.statusCode = 401;\n                    return [3 /*break*/, 3];\n                case 3:\n                    return [2 /*return*/];\n            }\n        });\n    });\n});","map":{"mappings":[{"source":"routes/LoginRouter.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":91,"column":0}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":91,"column":4}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":91,"column":12}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":91,"column":16}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":93,"column":0}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":93,"column":4}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":93,"column":16}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":93,"column":29}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":93,"column":37}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":93,"column":49}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":93,"column":50}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":93,"column":51}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":94,"column":0}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":94,"column":8}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":94,"column":19}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":27},"generated":{"line":94,"column":22}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":31},"generated":{"line":94,"column":26}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":27},"generated":{"line":94,"column":35}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":41},"generated":{"line":94,"column":36}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":43},"generated":{"line":94,"column":38}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":51},"generated":{"line":94,"column":46}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":41},"generated":{"line":94,"column":53}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":27},"generated":{"line":94,"column":55}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":62},"generated":{"line":94,"column":57}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":27},"generated":{"line":94,"column":61}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":94,"column":62}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":27},"generated":{"line":94,"column":65}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":94,"column":67}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":94,"column":77}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":94,"column":80}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":14},"generated":{"line":94,"column":82}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":94,"column":86}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":94,"column":88}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":95,"column":0}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":95,"column":11}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":95,"column":21}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":95,"column":26}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":95,"column":28}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":95,"column":33}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":95,"column":34}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":95,"column":36}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":95,"column":41}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":95,"column":42}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":95,"column":44}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":95,"column":56}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":101,"column":0}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":101,"column":27}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":101,"column":28}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":101,"column":29}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":101,"column":30}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":101,"column":39}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":101,"column":41}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":16},"generated":{"line":101,"column":45}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":101,"column":50}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":22},"generated":{"line":101,"column":51}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":26},"generated":{"line":101,"column":55}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":22},"generated":{"line":101,"column":62}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":34},"generated":{"line":101,"column":63}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":101,"column":67}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":101,"column":68}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":101,"column":69}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":103,"column":0}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":103,"column":23}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":103,"column":27}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":104,"column":0}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":104,"column":24}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":104,"column":27}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":12,"column":14},"generated":{"line":104,"column":28}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":104,"column":38}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":12,"column":27},"generated":{"line":104,"column":41}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":104,"column":44}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":14,"column":6},"generated":{"line":108,"column":0}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":14,"column":10},"generated":{"line":108,"column":24}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":14,"column":6},"generated":{"line":108,"column":27}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":14,"column":14},"generated":{"line":108,"column":28}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":14,"column":6},"generated":{"line":108,"column":38}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":14,"column":27},"generated":{"line":108,"column":41}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":14,"column":6},"generated":{"line":108,"column":44}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":114,"column":5}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":114,"column":6}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":16,"column":3},"generated":{"line":115,"column":0}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":27},"generated":{"line":115,"column":1}},{"source":"routes/LoginRouter.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":115,"column":2}}],"sources":{"routes/LoginRouter.ts":"import * as KoaRouter from 'koa-router';\n\nimport { getCustomRepository } from 'typeorm';\n\nimport { LoginRepository } from '../repositories';\n\nexport const LoginRouter = new KoaRouter({ prefix: 'login' }).post(\n  '/',\n  async (ctx, next) => {\n    try {\n      await ctx.login(ctx.request.body);\n      ctx.res.statusCode = 200;\n    } catch (error) {\n      ctx.res.statusCode = 401;\n    }\n  }\n);\n"},"lineCount":null}},"hash":"2f4477ff387263b83f5f3b978ffdc2c6","cacheData":{"env":{}}}