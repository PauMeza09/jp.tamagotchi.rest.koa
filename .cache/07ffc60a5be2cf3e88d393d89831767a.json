{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000},{"name":"../util/RandomGenerator","loc":{"line":3,"column":32}},{"name":"../util/StringUtils","loc":{"line":4,"column":28}},{"name":"../schema-builder/table/Table","loc":{"line":5,"column":22}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RandomGenerator_1 = require(\"../util/RandomGenerator\");\nvar StringUtils_1 = require(\"../util/StringUtils\");\nvar Table_1 = require(\"../schema-builder/table/Table\");\n/**\n * Naming strategy that is used by default.\n */\nvar DefaultNamingStrategy = /** @class */ (function () {\n    function DefaultNamingStrategy() {\n    }\n    /**\n     * Normalizes table name.\n     *\n     * @param targetName Name of the target entity that can be used to generate a table name.\n     * @param userSpecifiedName For example if user specified a table name in a decorator, e.g. @Entity(\"name\")\n     */\n    DefaultNamingStrategy.prototype.tableName = function (targetName, userSpecifiedName) {\n        return userSpecifiedName ? userSpecifiedName : StringUtils_1.snakeCase(targetName);\n    };\n    /**\n     * Creates a table name for a junction table of a closure table.\n     *\n     * @param originalClosureTableName Name of the closure table which owns this junction table.\n     */\n    DefaultNamingStrategy.prototype.closureJunctionTableName = function (originalClosureTableName) {\n        return originalClosureTableName + \"_closure\";\n    };\n    DefaultNamingStrategy.prototype.columnName = function (propertyName, customName, embeddedPrefixes) {\n        if (embeddedPrefixes.length)\n            return StringUtils_1.camelCase(embeddedPrefixes.join(\"_\")) + (customName ? StringUtils_1.titleCase(customName) : StringUtils_1.titleCase(propertyName));\n        return customName ? customName : propertyName;\n    };\n    DefaultNamingStrategy.prototype.relationName = function (propertyName) {\n        return propertyName;\n    };\n    DefaultNamingStrategy.prototype.primaryKeyName = function (tableOrName, columnNames) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = columnNames.slice();\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        return \"PK_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.uniqueConstraintName = function (tableOrName, columnNames) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = columnNames.slice();\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        return \"UQ_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.relationConstraintName = function (tableOrName, columnNames, where) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = columnNames.slice();\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        if (where)\n            key += \"_\" + where;\n        return \"REL_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 26);\n    };\n    DefaultNamingStrategy.prototype.defaultConstraintName = function (tableOrName, columnName) {\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + columnName;\n        return \"DF_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.foreignKeyName = function (tableOrName, columnNames) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = columnNames.slice();\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        return \"FK_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.indexName = function (tableOrName, columnNames, where) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = columnNames.slice();\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        if (where)\n            key += \"_\" + where;\n        return \"IDX_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 26);\n    };\n    DefaultNamingStrategy.prototype.checkConstraintName = function (tableOrName, expression) {\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + expression;\n        return \"CHK_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 26);\n    };\n    DefaultNamingStrategy.prototype.joinColumnName = function (relationName, referencedColumnName) {\n        return StringUtils_1.camelCase(relationName + \"_\" + referencedColumnName);\n    };\n    DefaultNamingStrategy.prototype.joinTableName = function (firstTableName, secondTableName, firstPropertyName, secondPropertyName) {\n        return StringUtils_1.snakeCase(firstTableName + \"_\" + firstPropertyName.replace(/\\./gi, \"_\") + \"_\" + secondTableName);\n    };\n    DefaultNamingStrategy.prototype.joinTableColumnDuplicationPrefix = function (columnName, index) {\n        return columnName + \"_\" + index;\n    };\n    DefaultNamingStrategy.prototype.joinTableColumnName = function (tableName, propertyName, columnName) {\n        return StringUtils_1.camelCase(tableName + \"_\" + (columnName ? columnName : propertyName));\n    };\n    DefaultNamingStrategy.prototype.joinTableInverseColumnName = function (tableName, propertyName, columnName) {\n        return this.joinTableColumnName(tableName, propertyName, columnName);\n    };\n    /**\n     * Adds globally set prefix to the table name.\n     * This method is executed no matter if prefix was set or not.\n     * Table name is either user's given table name, either name generated from entity target.\n     * Note that table name comes here already normalized by #tableName method.\n     */\n    DefaultNamingStrategy.prototype.prefixTableName = function (prefix, tableName) {\n        return prefix + tableName;\n    };\n    return DefaultNamingStrategy;\n}());\nexports.DefaultNamingStrategy = DefaultNamingStrategy;\n\n//# sourceMappingURL=DefaultNamingStrategy.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}}],"sources":{"../node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RandomGenerator_1 = require(\"../util/RandomGenerator\");\nvar StringUtils_1 = require(\"../util/StringUtils\");\nvar Table_1 = require(\"../schema-builder/table/Table\");\n/**\n * Naming strategy that is used by default.\n */\nvar DefaultNamingStrategy = /** @class */ (function () {\n    function DefaultNamingStrategy() {\n    }\n    /**\n     * Normalizes table name.\n     *\n     * @param targetName Name of the target entity that can be used to generate a table name.\n     * @param userSpecifiedName For example if user specified a table name in a decorator, e.g. @Entity(\"name\")\n     */\n    DefaultNamingStrategy.prototype.tableName = function (targetName, userSpecifiedName) {\n        return userSpecifiedName ? userSpecifiedName : StringUtils_1.snakeCase(targetName);\n    };\n    /**\n     * Creates a table name for a junction table of a closure table.\n     *\n     * @param originalClosureTableName Name of the closure table which owns this junction table.\n     */\n    DefaultNamingStrategy.prototype.closureJunctionTableName = function (originalClosureTableName) {\n        return originalClosureTableName + \"_closure\";\n    };\n    DefaultNamingStrategy.prototype.columnName = function (propertyName, customName, embeddedPrefixes) {\n        if (embeddedPrefixes.length)\n            return StringUtils_1.camelCase(embeddedPrefixes.join(\"_\")) + (customName ? StringUtils_1.titleCase(customName) : StringUtils_1.titleCase(propertyName));\n        return customName ? customName : propertyName;\n    };\n    DefaultNamingStrategy.prototype.relationName = function (propertyName) {\n        return propertyName;\n    };\n    DefaultNamingStrategy.prototype.primaryKeyName = function (tableOrName, columnNames) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = columnNames.slice();\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        return \"PK_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.uniqueConstraintName = function (tableOrName, columnNames) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = columnNames.slice();\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        return \"UQ_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.relationConstraintName = function (tableOrName, columnNames, where) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = columnNames.slice();\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        if (where)\n            key += \"_\" + where;\n        return \"REL_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 26);\n    };\n    DefaultNamingStrategy.prototype.defaultConstraintName = function (tableOrName, columnName) {\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + columnName;\n        return \"DF_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.foreignKeyName = function (tableOrName, columnNames) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = columnNames.slice();\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        return \"FK_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.indexName = function (tableOrName, columnNames, where) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = columnNames.slice();\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        if (where)\n            key += \"_\" + where;\n        return \"IDX_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 26);\n    };\n    DefaultNamingStrategy.prototype.checkConstraintName = function (tableOrName, expression) {\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + expression;\n        return \"CHK_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 26);\n    };\n    DefaultNamingStrategy.prototype.joinColumnName = function (relationName, referencedColumnName) {\n        return StringUtils_1.camelCase(relationName + \"_\" + referencedColumnName);\n    };\n    DefaultNamingStrategy.prototype.joinTableName = function (firstTableName, secondTableName, firstPropertyName, secondPropertyName) {\n        return StringUtils_1.snakeCase(firstTableName + \"_\" + firstPropertyName.replace(/\\./gi, \"_\") + \"_\" + secondTableName);\n    };\n    DefaultNamingStrategy.prototype.joinTableColumnDuplicationPrefix = function (columnName, index) {\n        return columnName + \"_\" + index;\n    };\n    DefaultNamingStrategy.prototype.joinTableColumnName = function (tableName, propertyName, columnName) {\n        return StringUtils_1.camelCase(tableName + \"_\" + (columnName ? columnName : propertyName));\n    };\n    DefaultNamingStrategy.prototype.joinTableInverseColumnName = function (tableName, propertyName, columnName) {\n        return this.joinTableColumnName(tableName, propertyName, columnName);\n    };\n    /**\n     * Adds globally set prefix to the table name.\n     * This method is executed no matter if prefix was set or not.\n     * Table name is either user's given table name, either name generated from entity target.\n     * Note that table name comes here already normalized by #tableName method.\n     */\n    DefaultNamingStrategy.prototype.prefixTableName = function (prefix, tableName) {\n        return prefix + tableName;\n    };\n    return DefaultNamingStrategy;\n}());\nexports.DefaultNamingStrategy = DefaultNamingStrategy;\n\n//# sourceMappingURL=DefaultNamingStrategy.js.map\n"},"lineCount":127}},"hash":"702c4edaac559870fcc5aa2a08226e3b","cacheData":{"env":{}}}