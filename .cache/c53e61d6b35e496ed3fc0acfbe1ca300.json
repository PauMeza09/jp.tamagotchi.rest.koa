{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000},{"name":"../../","loc":{"line":3,"column":17}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\"../../\");\n/**\n * JoinColumn decorator used on one-to-one relations to specify owner side of relationship.\n * It also can be used on both one-to-one and many-to-one relations to specify custom column name\n * or custom referenced column.\n */\nfunction JoinColumn(optionsOrOptionsArray) {\n    return function (object, propertyName) {\n        var options = optionsOrOptionsArray instanceof Array ? optionsOrOptionsArray : [optionsOrOptionsArray || {}];\n        options.forEach(function (options) {\n            _1.getMetadataArgsStorage().joinColumns.push({\n                target: object.constructor,\n                propertyName: propertyName,\n                name: options.name,\n                referencedColumnName: options.referencedColumnName\n            });\n        });\n    };\n}\nexports.JoinColumn = JoinColumn;\n\n//# sourceMappingURL=JoinColumn.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/decorator/relations/JoinColumn.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"../node_modules/typeorm/decorator/relations/JoinColumn.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\"../../\");\n/**\n * JoinColumn decorator used on one-to-one relations to specify owner side of relationship.\n * It also can be used on both one-to-one and many-to-one relations to specify custom column name\n * or custom referenced column.\n */\nfunction JoinColumn(optionsOrOptionsArray) {\n    return function (object, propertyName) {\n        var options = optionsOrOptionsArray instanceof Array ? optionsOrOptionsArray : [optionsOrOptionsArray || {}];\n        options.forEach(function (options) {\n            _1.getMetadataArgsStorage().joinColumns.push({\n                target: object.constructor,\n                propertyName: propertyName,\n                name: options.name,\n                referencedColumnName: options.referencedColumnName\n            });\n        });\n    };\n}\nexports.JoinColumn = JoinColumn;\n\n//# sourceMappingURL=JoinColumn.js.map\n"},"lineCount":25}},"hash":"fd780845d9e179950fab85ea36304263","cacheData":{"env":{}}}