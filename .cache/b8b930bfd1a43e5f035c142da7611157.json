{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000},{"name":"../naming-strategy/DefaultNamingStrategy","loc":{"line":38,"column":38}},{"name":"../error/CannotExecuteNotConnectedError","loc":{"line":39,"column":47}},{"name":"../error/CannotConnectAlreadyConnectedError","loc":{"line":40,"column":51}},{"name":"../error/EntityMetadataNotFoundError","loc":{"line":41,"column":44}},{"name":"../migration/MigrationExecutor","loc":{"line":42,"column":34}},{"name":"../driver/mongodb/MongoDriver","loc":{"line":43,"column":28}},{"name":"../entity-manager/MongoEntityManager","loc":{"line":44,"column":35}},{"name":"../metadata-builder/EntityMetadataValidator","loc":{"line":45,"column":40}},{"name":"../error/QueryRunnerProviderAlreadyReleasedError","loc":{"line":46,"column":56}},{"name":"../entity-manager/EntityManagerFactory","loc":{"line":47,"column":37}},{"name":"../driver/DriverFactory","loc":{"line":48,"column":30}},{"name":"./ConnectionMetadataBuilder","loc":{"line":49,"column":42}},{"name":"../query-builder/SelectQueryBuilder","loc":{"line":50,"column":35}},{"name":"../logger/LoggerFactory","loc":{"line":51,"column":30}},{"name":"../cache/QueryResultCacheFactory","loc":{"line":52,"column":40}},{"name":"../entity-manager/SqljsEntityManager","loc":{"line":53,"column":35}},{"name":"../query-builder/RelationLoader","loc":{"line":54,"column":31}},{"name":"../query-builder/RelationIdLoader","loc":{"line":55,"column":33}},{"name":"../","loc":{"line":59,"column":17}},{"name":"../driver/sqlserver/SqlServerDriver","loc":{"line":57,"column":32}},{"name":"../driver/mysql/MysqlDriver","loc":{"line":58,"column":28}}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultNamingStrategy_1 = require(\"../naming-strategy/DefaultNamingStrategy\");\nvar CannotExecuteNotConnectedError_1 = require(\"../error/CannotExecuteNotConnectedError\");\nvar CannotConnectAlreadyConnectedError_1 = require(\"../error/CannotConnectAlreadyConnectedError\");\nvar EntityMetadataNotFoundError_1 = require(\"../error/EntityMetadataNotFoundError\");\nvar MigrationExecutor_1 = require(\"../migration/MigrationExecutor\");\nvar MongoDriver_1 = require(\"../driver/mongodb/MongoDriver\");\nvar MongoEntityManager_1 = require(\"../entity-manager/MongoEntityManager\");\nvar EntityMetadataValidator_1 = require(\"../metadata-builder/EntityMetadataValidator\");\nvar QueryRunnerProviderAlreadyReleasedError_1 = require(\"../error/QueryRunnerProviderAlreadyReleasedError\");\nvar EntityManagerFactory_1 = require(\"../entity-manager/EntityManagerFactory\");\nvar DriverFactory_1 = require(\"../driver/DriverFactory\");\nvar ConnectionMetadataBuilder_1 = require(\"./ConnectionMetadataBuilder\");\nvar SelectQueryBuilder_1 = require(\"../query-builder/SelectQueryBuilder\");\nvar LoggerFactory_1 = require(\"../logger/LoggerFactory\");\nvar QueryResultCacheFactory_1 = require(\"../cache/QueryResultCacheFactory\");\nvar SqljsEntityManager_1 = require(\"../entity-manager/SqljsEntityManager\");\nvar RelationLoader_1 = require(\"../query-builder/RelationLoader\");\nvar RelationIdLoader_1 = require(\"../query-builder/RelationIdLoader\");\nvar _1 = require(\"../\");\nvar SqlServerDriver_1 = require(\"../driver/sqlserver/SqlServerDriver\");\nvar MysqlDriver_1 = require(\"../driver/mysql/MysqlDriver\");\nvar _2 = require(\"../\");\n/**\n * Connection is a single database ORM connection to a specific database.\n * Its not required to be a database connection, depend on database type it can create connection pool.\n * You can have multiple connections to multiple databases in your application.\n */\nvar Connection = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function Connection(options) {\n        /**\n         * Indicates if connection is initialized or not.\n         */\n        this.isConnected = false;\n        /**\n         * Migration instances that are registered for this connection.\n         */\n        this.migrations = [];\n        /**\n         * Entity subscriber instances that are registered for this connection.\n         */\n        this.subscribers = [];\n        /**\n         * All entity metadatas that are registered for this connection.\n         */\n        this.entityMetadatas = [];\n        this.name = options.name || \"default\";\n        this.options = options;\n        this.logger = new LoggerFactory_1.LoggerFactory().create(this.options.logger, this.options.logging);\n        this.driver = new DriverFactory_1.DriverFactory().create(this);\n        this.manager = this.createEntityManager();\n        this.namingStrategy = options.namingStrategy || new DefaultNamingStrategy_1.DefaultNamingStrategy();\n        this.queryResultCache = options.cache ? new QueryResultCacheFactory_1.QueryResultCacheFactory(this).create() : undefined;\n        this.relationLoader = new RelationLoader_1.RelationLoader(this);\n        this.relationIdLoader = new RelationIdLoader_1.RelationIdLoader(this);\n    }\n    Object.defineProperty(Connection.prototype, \"mongoManager\", {\n        // -------------------------------------------------------------------------\n        // Public Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Gets the mongodb entity manager that allows to perform mongodb-specific repository operations\n         * with any entity in this connection.\n         *\n         * Available only in mongodb connections.\n         */\n        get: function () {\n            if (!(this.manager instanceof MongoEntityManager_1.MongoEntityManager))\n                throw new Error(\"MongoEntityManager is only available for MongoDB databases.\");\n            return this.manager;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"sqljsManager\", {\n        /**\n         * Gets a sql.js specific Entity Manager that allows to perform special load and save operations\n         *\n         * Available only in connection with the sqljs driver.\n         */\n        get: function () {\n            if (!(this.manager instanceof SqljsEntityManager_1.SqljsEntityManager))\n                throw new Error(\"SqljsEntityManager is only available for Sqljs databases.\");\n            return this.manager;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     * This method should be called once on application bootstrap.\n     * This method not necessarily creates database connection (depend on database type),\n     * but it also can setup a connection pool with database to use.\n     */\n    Connection.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isConnected)\n                            throw new CannotConnectAlreadyConnectedError_1.CannotConnectAlreadyConnectedError(this.name);\n                        // connect to the database via its driver\n                        return [4 /*yield*/, this.driver.connect()];\n                    case 1:\n                        // connect to the database via its driver\n                        _a.sent();\n                        if (!this.queryResultCache) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.queryResultCache.connect()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        // set connected status for the current connection\n                        Object.assign(this, { isConnected: true });\n                        _a.label = 4;\n                    case 4:\n                        _a.trys.push([4, 12, , 14]);\n                        // build all metadatas registered in the current connection\n                        this.buildMetadatas();\n                        return [4 /*yield*/, this.driver.afterConnect()];\n                    case 5:\n                        _a.sent();\n                        if (!this.options.dropSchema) return [3 /*break*/, 7];\n                        return [4 /*yield*/, this.dropDatabase()];\n                    case 6:\n                        _a.sent();\n                        _a.label = 7;\n                    case 7:\n                        if (!this.options.synchronize) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.synchronize()];\n                    case 8:\n                        _a.sent();\n                        _a.label = 9;\n                    case 9:\n                        if (!this.options.migrationsRun) return [3 /*break*/, 11];\n                        return [4 /*yield*/, this.runMigrations()];\n                    case 10:\n                        _a.sent();\n                        _a.label = 11;\n                    case 11: return [3 /*break*/, 14];\n                    case 12:\n                        error_1 = _a.sent();\n                        // if for some reason build metadata fail (for example validation error during entity metadata check)\n                        // connection needs to be closed\n                        return [4 /*yield*/, this.close()];\n                    case 13:\n                        // if for some reason build metadata fail (for example validation error during entity metadata check)\n                        // connection needs to be closed\n                        _a.sent();\n                        throw error_1;\n                    case 14: return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     * Closes connection with the database.\n     * Once connection is closed, you cannot use repositories or perform any operations except opening connection again.\n     */\n    Connection.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError_1.CannotExecuteNotConnectedError(this.name);\n                        return [4 /*yield*/, this.driver.disconnect()];\n                    case 1:\n                        _a.sent();\n                        if (!this.queryResultCache) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.queryResultCache.disconnect()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        Object.assign(this, { isConnected: false });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates database schema for all entities registered in this connection.\n     * Can be used only after connection to the database is established.\n     *\n     * @param dropBeforeSync If set to true then it drops the database with all its tables and data\n     */\n    Connection.prototype.synchronize = function (dropBeforeSync) {\n        if (dropBeforeSync === void 0) { dropBeforeSync = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var schemaBuilder;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError_1.CannotExecuteNotConnectedError(this.name);\n                        if (!dropBeforeSync) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.dropDatabase()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        schemaBuilder = this.driver.createSchemaBuilder();\n                        return [4 /*yield*/, schemaBuilder.build()];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the database and all its data.\n     * Be careful with this method on production since this method will erase all your database tables and their data.\n     * Can be used only after connection to the database is established.\n     */\n    // TODO rename\n    Connection.prototype.dropDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, databases_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createQueryRunner(\"master\")];\n                    case 1:\n                        queryRunner = _a.sent();\n                        if (!(this.driver instanceof SqlServerDriver_1.SqlServerDriver || this.driver instanceof MysqlDriver_1.MysqlDriver)) return [3 /*break*/, 3];\n                        databases_1 = this.driver.database ? [this.driver.database] : [];\n                        this.entityMetadatas.forEach(function (metadata) {\n                            if (metadata.database && databases_1.indexOf(metadata.database) === -1)\n                                databases_1.push(metadata.database);\n                        });\n                        return [4 /*yield*/, _2.PromiseUtils.runInSequence(databases_1, function (database) { return queryRunner.clearDatabase(database); })];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 3: return [4 /*yield*/, queryRunner.clearDatabase()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [4 /*yield*/, queryRunner.release()];\n                    case 6:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Runs all pending migrations.\n     * Can be used only after connection to the database is established.\n     */\n    Connection.prototype.runMigrations = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var migrationExecutor;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError_1.CannotExecuteNotConnectedError(this.name);\n                        migrationExecutor = new MigrationExecutor_1.MigrationExecutor(this);\n                        if (options && options.transaction === false) {\n                            migrationExecutor.transaction = false;\n                        }\n                        return [4 /*yield*/, migrationExecutor.executePendingMigrations()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Reverts last executed migration.\n     * Can be used only after connection to the database is established.\n     */\n    Connection.prototype.undoLastMigration = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var migrationExecutor;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError_1.CannotExecuteNotConnectedError(this.name);\n                        migrationExecutor = new MigrationExecutor_1.MigrationExecutor(this);\n                        if (options && options.transaction === false) {\n                            migrationExecutor.transaction = false;\n                        }\n                        return [4 /*yield*/, migrationExecutor.undoLastMigration()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if entity metadata exist for the given entity class, target name or table name.\n     */\n    Connection.prototype.hasMetadata = function (target) {\n        return !!this.findMetadata(target);\n    };\n    /**\n     * Gets entity metadata for the given entity class or schema name.\n     */\n    Connection.prototype.getMetadata = function (target) {\n        var metadata = this.findMetadata(target);\n        if (!metadata)\n            throw new EntityMetadataNotFoundError_1.EntityMetadataNotFoundError(target);\n        return metadata;\n    };\n    /**\n     * Gets repository for the given entity.\n     */\n    Connection.prototype.getRepository = function (target) {\n        return this.manager.getRepository(target);\n    };\n    /**\n     * Gets tree repository for the given entity class or name.\n     * Only tree-type entities can have a TreeRepository, like ones decorated with @Tree decorator.\n     */\n    Connection.prototype.getTreeRepository = function (target) {\n        return this.manager.getTreeRepository(target);\n    };\n    /**\n     * Gets mongodb-specific repository for the given entity class or name.\n     * Works only if connection is mongodb-specific.\n     */\n    Connection.prototype.getMongoRepository = function (target) {\n        if (!(this.driver instanceof MongoDriver_1.MongoDriver))\n            throw new Error(\"You can use getMongoRepository only for MongoDB connections.\");\n        return this.manager.getRepository(target);\n    };\n    /**\n     * Gets custom entity repository marked with @EntityRepository decorator.\n     */\n    Connection.prototype.getCustomRepository = function (customRepository) {\n        return this.manager.getCustomRepository(customRepository);\n    };\n    /**\n     * Wraps given function execution (and all operations made there) into a transaction.\n     * All database operations must be executed using provided entity manager.\n     */\n    Connection.prototype.transaction = function (runInTransaction) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.manager.transaction(runInTransaction)];\n            });\n        });\n    };\n    /**\n     * Executes raw SQL query and returns raw database results.\n     */\n    Connection.prototype.query = function (query, parameters, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var usedQueryRunner;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this instanceof MongoEntityManager_1.MongoEntityManager)\n                            throw new Error(\"Queries aren't supported by MongoDB.\");\n                        if (queryRunner && queryRunner.isReleased)\n                            throw new QueryRunnerProviderAlreadyReleasedError_1.QueryRunnerProviderAlreadyReleasedError();\n                        usedQueryRunner = queryRunner || this.createQueryRunner(\"master\");\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 3, 6]);\n                        return [4 /*yield*/, usedQueryRunner.query(query, parameters)];\n                    case 2: return [2 /*return*/, _a.sent()]; // await is needed here because we are using finally\n                    case 3:\n                        if (!!queryRunner) return [3 /*break*/, 5];\n                        return [4 /*yield*/, usedQueryRunner.release()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [7 /*endfinally*/];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new query builder that can be used to build a sql query.\n     */\n    Connection.prototype.createQueryBuilder = function (entityOrRunner, alias, queryRunner) {\n        if (this instanceof MongoEntityManager_1.MongoEntityManager)\n            throw new Error(\"Query Builder is not supported by MongoDB.\");\n        if (alias) {\n            var metadata = this.getMetadata(entityOrRunner);\n            return new SelectQueryBuilder_1.SelectQueryBuilder(this, queryRunner)\n                .select(alias)\n                .from(metadata.target, alias);\n        }\n        else {\n            return new SelectQueryBuilder_1.SelectQueryBuilder(this, entityOrRunner);\n        }\n    };\n    /**\n     * Creates a query runner used for perform queries on a single database connection.\n     * Using query runners you can control your queries to execute using single database connection and\n     * manually control your database transaction.\n     *\n     * Mode is used in replication mode and indicates whatever you want to connect\n     * to master database or any of slave databases.\n     * If you perform writes you must use master database,\n     * if you perform reads you can use slave databases.\n     */\n    Connection.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        var queryRunner = this.driver.createQueryRunner(mode);\n        var manager = this.createEntityManager(queryRunner);\n        Object.assign(queryRunner, { manager: manager });\n        return queryRunner;\n    };\n    /**\n     * Gets entity metadata of the junction table (many-to-many table).\n     */\n    Connection.prototype.getManyToManyMetadata = function (entityTarget, relationPropertyPath) {\n        var relationMetadata = this.getMetadata(entityTarget).findRelationWithPropertyPath(relationPropertyPath);\n        if (!relationMetadata)\n            throw new Error(\"Relation \\\"\" + relationPropertyPath + \"\\\" was not found in \" + entityTarget + \" entity.\");\n        if (!relationMetadata.isManyToMany)\n            throw new Error(\"Relation \\\"\" + entityTarget + \"#\" + relationPropertyPath + \"\\\" does not have a many-to-many relationship.\" +\n                \"You can use this method only on many-to-many relations.\");\n        return relationMetadata.junctionEntityMetadata;\n    };\n    /**\n     * Creates an Entity Manager for the current connection with the help of the EntityManagerFactory.\n     */\n    Connection.prototype.createEntityManager = function (queryRunner) {\n        return new EntityManagerFactory_1.EntityManagerFactory().create(this, queryRunner);\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Finds exist entity metadata by the given entity class, target name or table name.\n     */\n    Connection.prototype.findMetadata = function (target) {\n        return this.entityMetadatas.find(function (metadata) {\n            if (metadata.target === target)\n                return true;\n            if (target instanceof _1.EntitySchema) {\n                return metadata.name === target.options.name;\n            }\n            if (typeof target === \"string\") {\n                if (target.indexOf(\".\") !== -1) {\n                    return metadata.tablePath === target;\n                }\n                else {\n                    return metadata.name === target || metadata.tableName === target;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Builds metadatas for all registered classes inside this connection.\n     */\n    Connection.prototype.buildMetadatas = function () {\n        var connectionMetadataBuilder = new ConnectionMetadataBuilder_1.ConnectionMetadataBuilder(this);\n        var entityMetadataValidator = new EntityMetadataValidator_1.EntityMetadataValidator();\n        // create subscribers instances if they are not disallowed from high-level (for example they can disallowed from migrations run process)\n        var subscribers = connectionMetadataBuilder.buildSubscribers(this.options.subscribers || []);\n        Object.assign(this, { subscribers: subscribers });\n        // build entity metadatas\n        var entityMetadatas = connectionMetadataBuilder.buildEntityMetadatas(this.options.entities || []);\n        Object.assign(this, { entityMetadatas: entityMetadatas });\n        // create migration instances\n        var migrations = connectionMetadataBuilder.buildMigrations(this.options.migrations || []);\n        Object.assign(this, { migrations: migrations });\n        // validate all created entity metadatas to make sure user created entities are valid and correct\n        entityMetadataValidator.validateMany(this.entityMetadatas, this.driver);\n    };\n    return Connection;\n}());\nexports.Connection = Connection;\n\n//# sourceMappingURL=Connection.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/typeorm/connection/Connection.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}}],"sources":{"../node_modules/typeorm/connection/Connection.js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultNamingStrategy_1 = require(\"../naming-strategy/DefaultNamingStrategy\");\nvar CannotExecuteNotConnectedError_1 = require(\"../error/CannotExecuteNotConnectedError\");\nvar CannotConnectAlreadyConnectedError_1 = require(\"../error/CannotConnectAlreadyConnectedError\");\nvar EntityMetadataNotFoundError_1 = require(\"../error/EntityMetadataNotFoundError\");\nvar MigrationExecutor_1 = require(\"../migration/MigrationExecutor\");\nvar MongoDriver_1 = require(\"../driver/mongodb/MongoDriver\");\nvar MongoEntityManager_1 = require(\"../entity-manager/MongoEntityManager\");\nvar EntityMetadataValidator_1 = require(\"../metadata-builder/EntityMetadataValidator\");\nvar QueryRunnerProviderAlreadyReleasedError_1 = require(\"../error/QueryRunnerProviderAlreadyReleasedError\");\nvar EntityManagerFactory_1 = require(\"../entity-manager/EntityManagerFactory\");\nvar DriverFactory_1 = require(\"../driver/DriverFactory\");\nvar ConnectionMetadataBuilder_1 = require(\"./ConnectionMetadataBuilder\");\nvar SelectQueryBuilder_1 = require(\"../query-builder/SelectQueryBuilder\");\nvar LoggerFactory_1 = require(\"../logger/LoggerFactory\");\nvar QueryResultCacheFactory_1 = require(\"../cache/QueryResultCacheFactory\");\nvar SqljsEntityManager_1 = require(\"../entity-manager/SqljsEntityManager\");\nvar RelationLoader_1 = require(\"../query-builder/RelationLoader\");\nvar RelationIdLoader_1 = require(\"../query-builder/RelationIdLoader\");\nvar _1 = require(\"../\");\nvar SqlServerDriver_1 = require(\"../driver/sqlserver/SqlServerDriver\");\nvar MysqlDriver_1 = require(\"../driver/mysql/MysqlDriver\");\nvar _2 = require(\"../\");\n/**\n * Connection is a single database ORM connection to a specific database.\n * Its not required to be a database connection, depend on database type it can create connection pool.\n * You can have multiple connections to multiple databases in your application.\n */\nvar Connection = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function Connection(options) {\n        /**\n         * Indicates if connection is initialized or not.\n         */\n        this.isConnected = false;\n        /**\n         * Migration instances that are registered for this connection.\n         */\n        this.migrations = [];\n        /**\n         * Entity subscriber instances that are registered for this connection.\n         */\n        this.subscribers = [];\n        /**\n         * All entity metadatas that are registered for this connection.\n         */\n        this.entityMetadatas = [];\n        this.name = options.name || \"default\";\n        this.options = options;\n        this.logger = new LoggerFactory_1.LoggerFactory().create(this.options.logger, this.options.logging);\n        this.driver = new DriverFactory_1.DriverFactory().create(this);\n        this.manager = this.createEntityManager();\n        this.namingStrategy = options.namingStrategy || new DefaultNamingStrategy_1.DefaultNamingStrategy();\n        this.queryResultCache = options.cache ? new QueryResultCacheFactory_1.QueryResultCacheFactory(this).create() : undefined;\n        this.relationLoader = new RelationLoader_1.RelationLoader(this);\n        this.relationIdLoader = new RelationIdLoader_1.RelationIdLoader(this);\n    }\n    Object.defineProperty(Connection.prototype, \"mongoManager\", {\n        // -------------------------------------------------------------------------\n        // Public Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Gets the mongodb entity manager that allows to perform mongodb-specific repository operations\n         * with any entity in this connection.\n         *\n         * Available only in mongodb connections.\n         */\n        get: function () {\n            if (!(this.manager instanceof MongoEntityManager_1.MongoEntityManager))\n                throw new Error(\"MongoEntityManager is only available for MongoDB databases.\");\n            return this.manager;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"sqljsManager\", {\n        /**\n         * Gets a sql.js specific Entity Manager that allows to perform special load and save operations\n         *\n         * Available only in connection with the sqljs driver.\n         */\n        get: function () {\n            if (!(this.manager instanceof SqljsEntityManager_1.SqljsEntityManager))\n                throw new Error(\"SqljsEntityManager is only available for Sqljs databases.\");\n            return this.manager;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     * This method should be called once on application bootstrap.\n     * This method not necessarily creates database connection (depend on database type),\n     * but it also can setup a connection pool with database to use.\n     */\n    Connection.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isConnected)\n                            throw new CannotConnectAlreadyConnectedError_1.CannotConnectAlreadyConnectedError(this.name);\n                        // connect to the database via its driver\n                        return [4 /*yield*/, this.driver.connect()];\n                    case 1:\n                        // connect to the database via its driver\n                        _a.sent();\n                        if (!this.queryResultCache) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.queryResultCache.connect()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        // set connected status for the current connection\n                        Object.assign(this, { isConnected: true });\n                        _a.label = 4;\n                    case 4:\n                        _a.trys.push([4, 12, , 14]);\n                        // build all metadatas registered in the current connection\n                        this.buildMetadatas();\n                        return [4 /*yield*/, this.driver.afterConnect()];\n                    case 5:\n                        _a.sent();\n                        if (!this.options.dropSchema) return [3 /*break*/, 7];\n                        return [4 /*yield*/, this.dropDatabase()];\n                    case 6:\n                        _a.sent();\n                        _a.label = 7;\n                    case 7:\n                        if (!this.options.synchronize) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.synchronize()];\n                    case 8:\n                        _a.sent();\n                        _a.label = 9;\n                    case 9:\n                        if (!this.options.migrationsRun) return [3 /*break*/, 11];\n                        return [4 /*yield*/, this.runMigrations()];\n                    case 10:\n                        _a.sent();\n                        _a.label = 11;\n                    case 11: return [3 /*break*/, 14];\n                    case 12:\n                        error_1 = _a.sent();\n                        // if for some reason build metadata fail (for example validation error during entity metadata check)\n                        // connection needs to be closed\n                        return [4 /*yield*/, this.close()];\n                    case 13:\n                        // if for some reason build metadata fail (for example validation error during entity metadata check)\n                        // connection needs to be closed\n                        _a.sent();\n                        throw error_1;\n                    case 14: return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     * Closes connection with the database.\n     * Once connection is closed, you cannot use repositories or perform any operations except opening connection again.\n     */\n    Connection.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError_1.CannotExecuteNotConnectedError(this.name);\n                        return [4 /*yield*/, this.driver.disconnect()];\n                    case 1:\n                        _a.sent();\n                        if (!this.queryResultCache) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.queryResultCache.disconnect()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        Object.assign(this, { isConnected: false });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates database schema for all entities registered in this connection.\n     * Can be used only after connection to the database is established.\n     *\n     * @param dropBeforeSync If set to true then it drops the database with all its tables and data\n     */\n    Connection.prototype.synchronize = function (dropBeforeSync) {\n        if (dropBeforeSync === void 0) { dropBeforeSync = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var schemaBuilder;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError_1.CannotExecuteNotConnectedError(this.name);\n                        if (!dropBeforeSync) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.dropDatabase()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        schemaBuilder = this.driver.createSchemaBuilder();\n                        return [4 /*yield*/, schemaBuilder.build()];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the database and all its data.\n     * Be careful with this method on production since this method will erase all your database tables and their data.\n     * Can be used only after connection to the database is established.\n     */\n    // TODO rename\n    Connection.prototype.dropDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, databases_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createQueryRunner(\"master\")];\n                    case 1:\n                        queryRunner = _a.sent();\n                        if (!(this.driver instanceof SqlServerDriver_1.SqlServerDriver || this.driver instanceof MysqlDriver_1.MysqlDriver)) return [3 /*break*/, 3];\n                        databases_1 = this.driver.database ? [this.driver.database] : [];\n                        this.entityMetadatas.forEach(function (metadata) {\n                            if (metadata.database && databases_1.indexOf(metadata.database) === -1)\n                                databases_1.push(metadata.database);\n                        });\n                        return [4 /*yield*/, _2.PromiseUtils.runInSequence(databases_1, function (database) { return queryRunner.clearDatabase(database); })];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 3: return [4 /*yield*/, queryRunner.clearDatabase()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [4 /*yield*/, queryRunner.release()];\n                    case 6:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Runs all pending migrations.\n     * Can be used only after connection to the database is established.\n     */\n    Connection.prototype.runMigrations = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var migrationExecutor;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError_1.CannotExecuteNotConnectedError(this.name);\n                        migrationExecutor = new MigrationExecutor_1.MigrationExecutor(this);\n                        if (options && options.transaction === false) {\n                            migrationExecutor.transaction = false;\n                        }\n                        return [4 /*yield*/, migrationExecutor.executePendingMigrations()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Reverts last executed migration.\n     * Can be used only after connection to the database is established.\n     */\n    Connection.prototype.undoLastMigration = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var migrationExecutor;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError_1.CannotExecuteNotConnectedError(this.name);\n                        migrationExecutor = new MigrationExecutor_1.MigrationExecutor(this);\n                        if (options && options.transaction === false) {\n                            migrationExecutor.transaction = false;\n                        }\n                        return [4 /*yield*/, migrationExecutor.undoLastMigration()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if entity metadata exist for the given entity class, target name or table name.\n     */\n    Connection.prototype.hasMetadata = function (target) {\n        return !!this.findMetadata(target);\n    };\n    /**\n     * Gets entity metadata for the given entity class or schema name.\n     */\n    Connection.prototype.getMetadata = function (target) {\n        var metadata = this.findMetadata(target);\n        if (!metadata)\n            throw new EntityMetadataNotFoundError_1.EntityMetadataNotFoundError(target);\n        return metadata;\n    };\n    /**\n     * Gets repository for the given entity.\n     */\n    Connection.prototype.getRepository = function (target) {\n        return this.manager.getRepository(target);\n    };\n    /**\n     * Gets tree repository for the given entity class or name.\n     * Only tree-type entities can have a TreeRepository, like ones decorated with @Tree decorator.\n     */\n    Connection.prototype.getTreeRepository = function (target) {\n        return this.manager.getTreeRepository(target);\n    };\n    /**\n     * Gets mongodb-specific repository for the given entity class or name.\n     * Works only if connection is mongodb-specific.\n     */\n    Connection.prototype.getMongoRepository = function (target) {\n        if (!(this.driver instanceof MongoDriver_1.MongoDriver))\n            throw new Error(\"You can use getMongoRepository only for MongoDB connections.\");\n        return this.manager.getRepository(target);\n    };\n    /**\n     * Gets custom entity repository marked with @EntityRepository decorator.\n     */\n    Connection.prototype.getCustomRepository = function (customRepository) {\n        return this.manager.getCustomRepository(customRepository);\n    };\n    /**\n     * Wraps given function execution (and all operations made there) into a transaction.\n     * All database operations must be executed using provided entity manager.\n     */\n    Connection.prototype.transaction = function (runInTransaction) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.manager.transaction(runInTransaction)];\n            });\n        });\n    };\n    /**\n     * Executes raw SQL query and returns raw database results.\n     */\n    Connection.prototype.query = function (query, parameters, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var usedQueryRunner;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this instanceof MongoEntityManager_1.MongoEntityManager)\n                            throw new Error(\"Queries aren't supported by MongoDB.\");\n                        if (queryRunner && queryRunner.isReleased)\n                            throw new QueryRunnerProviderAlreadyReleasedError_1.QueryRunnerProviderAlreadyReleasedError();\n                        usedQueryRunner = queryRunner || this.createQueryRunner(\"master\");\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 3, 6]);\n                        return [4 /*yield*/, usedQueryRunner.query(query, parameters)];\n                    case 2: return [2 /*return*/, _a.sent()]; // await is needed here because we are using finally\n                    case 3:\n                        if (!!queryRunner) return [3 /*break*/, 5];\n                        return [4 /*yield*/, usedQueryRunner.release()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [7 /*endfinally*/];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new query builder that can be used to build a sql query.\n     */\n    Connection.prototype.createQueryBuilder = function (entityOrRunner, alias, queryRunner) {\n        if (this instanceof MongoEntityManager_1.MongoEntityManager)\n            throw new Error(\"Query Builder is not supported by MongoDB.\");\n        if (alias) {\n            var metadata = this.getMetadata(entityOrRunner);\n            return new SelectQueryBuilder_1.SelectQueryBuilder(this, queryRunner)\n                .select(alias)\n                .from(metadata.target, alias);\n        }\n        else {\n            return new SelectQueryBuilder_1.SelectQueryBuilder(this, entityOrRunner);\n        }\n    };\n    /**\n     * Creates a query runner used for perform queries on a single database connection.\n     * Using query runners you can control your queries to execute using single database connection and\n     * manually control your database transaction.\n     *\n     * Mode is used in replication mode and indicates whatever you want to connect\n     * to master database or any of slave databases.\n     * If you perform writes you must use master database,\n     * if you perform reads you can use slave databases.\n     */\n    Connection.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        var queryRunner = this.driver.createQueryRunner(mode);\n        var manager = this.createEntityManager(queryRunner);\n        Object.assign(queryRunner, { manager: manager });\n        return queryRunner;\n    };\n    /**\n     * Gets entity metadata of the junction table (many-to-many table).\n     */\n    Connection.prototype.getManyToManyMetadata = function (entityTarget, relationPropertyPath) {\n        var relationMetadata = this.getMetadata(entityTarget).findRelationWithPropertyPath(relationPropertyPath);\n        if (!relationMetadata)\n            throw new Error(\"Relation \\\"\" + relationPropertyPath + \"\\\" was not found in \" + entityTarget + \" entity.\");\n        if (!relationMetadata.isManyToMany)\n            throw new Error(\"Relation \\\"\" + entityTarget + \"#\" + relationPropertyPath + \"\\\" does not have a many-to-many relationship.\" +\n                \"You can use this method only on many-to-many relations.\");\n        return relationMetadata.junctionEntityMetadata;\n    };\n    /**\n     * Creates an Entity Manager for the current connection with the help of the EntityManagerFactory.\n     */\n    Connection.prototype.createEntityManager = function (queryRunner) {\n        return new EntityManagerFactory_1.EntityManagerFactory().create(this, queryRunner);\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Finds exist entity metadata by the given entity class, target name or table name.\n     */\n    Connection.prototype.findMetadata = function (target) {\n        return this.entityMetadatas.find(function (metadata) {\n            if (metadata.target === target)\n                return true;\n            if (target instanceof _1.EntitySchema) {\n                return metadata.name === target.options.name;\n            }\n            if (typeof target === \"string\") {\n                if (target.indexOf(\".\") !== -1) {\n                    return metadata.tablePath === target;\n                }\n                else {\n                    return metadata.name === target || metadata.tableName === target;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Builds metadatas for all registered classes inside this connection.\n     */\n    Connection.prototype.buildMetadatas = function () {\n        var connectionMetadataBuilder = new ConnectionMetadataBuilder_1.ConnectionMetadataBuilder(this);\n        var entityMetadataValidator = new EntityMetadataValidator_1.EntityMetadataValidator();\n        // create subscribers instances if they are not disallowed from high-level (for example they can disallowed from migrations run process)\n        var subscribers = connectionMetadataBuilder.buildSubscribers(this.options.subscribers || []);\n        Object.assign(this, { subscribers: subscribers });\n        // build entity metadatas\n        var entityMetadatas = connectionMetadataBuilder.buildEntityMetadatas(this.options.entities || []);\n        Object.assign(this, { entityMetadatas: entityMetadatas });\n        // create migration instances\n        var migrations = connectionMetadataBuilder.buildMigrations(this.options.migrations || []);\n        Object.assign(this, { migrations: migrations });\n        // validate all created entity metadatas to make sure user created entities are valid and correct\n        entityMetadataValidator.validateMany(this.entityMetadatas, this.driver);\n    };\n    return Connection;\n}());\nexports.Connection = Connection;\n\n//# sourceMappingURL=Connection.js.map\n"},"lineCount":522}},"hash":"7f9e90cc26d0635d738423e612c1317b","cacheData":{"env":{}}}