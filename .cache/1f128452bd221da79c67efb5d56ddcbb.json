{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000},{"name":"./QueryBuilderUtils","loc":{"line":3,"column":34}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryBuilderUtils_1 = require(\"./QueryBuilderUtils\");\n/**\n * Stores all join attributes which will be used to build a JOIN query.\n */\nvar JoinAttribute = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function JoinAttribute(connection, queryExpressionMap, joinAttribute) {\n        this.connection = connection;\n        this.queryExpressionMap = queryExpressionMap;\n        Object.assign(this, joinAttribute || {});\n    }\n    Object.defineProperty(JoinAttribute.prototype, \"isMany\", {\n        // -------------------------------------------------------------------------\n        // Public Methods\n        // -------------------------------------------------------------------------\n        get: function () {\n            if (this.isMappingMany !== undefined)\n                return this.isMappingMany;\n            if (this.relation)\n                return this.relation.isManyToMany || this.relation.isOneToMany;\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"isSelected\", {\n        /**\n         * Indicates if this join is selected.\n         */\n        get: function () {\n            var _this = this;\n            var _loop_1 = function (select) {\n                if (select.selection === this_1.alias.name)\n                    return { value: true };\n                if (this_1.metadata && !!this_1.metadata.columns.find(function (column) { return select.selection === _this.alias.name + \".\" + column.propertyPath; }))\n                    return { value: true };\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = this.queryExpressionMap.selects; _i < _a.length; _i++) {\n                var select = _a[_i];\n                var state_1 = _loop_1(select);\n                if (typeof state_1 === \"object\")\n                    return state_1.value;\n            }\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"tablePath\", {\n        /**\n         * Name of the table which we should join.\n         */\n        get: function () {\n            return this.metadata ? this.metadata.tablePath : this.entityOrProperty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"parentAlias\", {\n        /**\n         * Alias of the parent of this join.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"post\" is a parent alias.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.entityOrProperty))\n                return undefined;\n            return this.entityOrProperty.substr(0, this.entityOrProperty.indexOf(\".\"));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"relationPropertyPath\", {\n        /**\n         * Relation property name of the parent.\n         * This is used to understand what is joined.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"category\" is a relation property.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.entityOrProperty))\n                return undefined;\n            return this.entityOrProperty.substr(this.entityOrProperty.indexOf(\".\") + 1);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"relation\", {\n        /**\n         * Relation of the parent.\n         * This is used to understand what is joined.\n         * This is available when join was made using \"post.category\" syntax.\n         * Relation can be undefined if entityOrProperty is regular entity or custom table.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.entityOrProperty))\n                return undefined;\n            var relationOwnerSelection = this.queryExpressionMap.findAliasByName(this.parentAlias);\n            var relation = relationOwnerSelection.metadata.findRelationWithPropertyPath(this.relationPropertyPath);\n            if (relation) {\n                return relation;\n            }\n            if (relationOwnerSelection.metadata.parentEntityMetadata) {\n                relation = relationOwnerSelection.metadata.parentEntityMetadata.findRelationWithPropertyPath(this.relationPropertyPath);\n                if (relation) {\n                    return relation;\n                }\n            }\n            throw new Error(\"Relation with property path \" + this.relationPropertyPath + \" in entity was not found.\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"metadata\", {\n        /**\n         * Metadata of the joined entity.\n         * If table without entity was joined, then it will return undefined.\n         */\n        get: function () {\n            // entityOrProperty is relation, e.g. \"post.category\"\n            if (this.relation)\n                return this.relation.inverseEntityMetadata;\n            // entityOrProperty is Entity class\n            if (this.connection.hasMetadata(this.entityOrProperty))\n                return this.connection.getMetadata(this.entityOrProperty);\n            return undefined;\n            /*if (typeof this.entityOrProperty === \"string\") { // entityOrProperty is a custom table\n    \n                // first try to find entity with such name, this is needed when entity does not have a target class,\n                // and its target is a string name (scenario when plain old javascript is used or entity schema is loaded from files)\n                const metadata = this.connection.entityMetadatas.find(metadata => metadata.name === this.entityOrProperty);\n                if (metadata)\n                    return metadata;\n    \n                // check if we have entity with such table name, and use its metadata if found\n                return this.connection.entityMetadatas.find(metadata => metadata.tableName === this.entityOrProperty);\n            }*/\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"junctionAlias\", {\n        /**\n         * Generates alias of junction table, whose ids we get.\n         */\n        get: function () {\n            if (!this.relation)\n                throw new Error(\"Cannot get junction table for join without relation.\");\n            return this.relation.isOwning ? this.parentAlias + \"_\" + this.alias.name : this.alias.name + \"_\" + this.parentAlias;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"mapToPropertyParentAlias\", {\n        get: function () {\n            if (!this.mapToProperty)\n                return undefined;\n            return this.mapToProperty.split(\".\")[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"mapToPropertyPropertyName\", {\n        get: function () {\n            if (!this.mapToProperty)\n                return undefined;\n            return this.mapToProperty.split(\".\")[1];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return JoinAttribute;\n}());\nexports.JoinAttribute = JoinAttribute;\n\n//# sourceMappingURL=JoinAttribute.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/typeorm/query-builder/JoinAttribute.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}}],"sources":{"../node_modules/typeorm/query-builder/JoinAttribute.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryBuilderUtils_1 = require(\"./QueryBuilderUtils\");\n/**\n * Stores all join attributes which will be used to build a JOIN query.\n */\nvar JoinAttribute = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function JoinAttribute(connection, queryExpressionMap, joinAttribute) {\n        this.connection = connection;\n        this.queryExpressionMap = queryExpressionMap;\n        Object.assign(this, joinAttribute || {});\n    }\n    Object.defineProperty(JoinAttribute.prototype, \"isMany\", {\n        // -------------------------------------------------------------------------\n        // Public Methods\n        // -------------------------------------------------------------------------\n        get: function () {\n            if (this.isMappingMany !== undefined)\n                return this.isMappingMany;\n            if (this.relation)\n                return this.relation.isManyToMany || this.relation.isOneToMany;\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"isSelected\", {\n        /**\n         * Indicates if this join is selected.\n         */\n        get: function () {\n            var _this = this;\n            var _loop_1 = function (select) {\n                if (select.selection === this_1.alias.name)\n                    return { value: true };\n                if (this_1.metadata && !!this_1.metadata.columns.find(function (column) { return select.selection === _this.alias.name + \".\" + column.propertyPath; }))\n                    return { value: true };\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = this.queryExpressionMap.selects; _i < _a.length; _i++) {\n                var select = _a[_i];\n                var state_1 = _loop_1(select);\n                if (typeof state_1 === \"object\")\n                    return state_1.value;\n            }\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"tablePath\", {\n        /**\n         * Name of the table which we should join.\n         */\n        get: function () {\n            return this.metadata ? this.metadata.tablePath : this.entityOrProperty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"parentAlias\", {\n        /**\n         * Alias of the parent of this join.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"post\" is a parent alias.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.entityOrProperty))\n                return undefined;\n            return this.entityOrProperty.substr(0, this.entityOrProperty.indexOf(\".\"));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"relationPropertyPath\", {\n        /**\n         * Relation property name of the parent.\n         * This is used to understand what is joined.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"category\" is a relation property.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.entityOrProperty))\n                return undefined;\n            return this.entityOrProperty.substr(this.entityOrProperty.indexOf(\".\") + 1);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"relation\", {\n        /**\n         * Relation of the parent.\n         * This is used to understand what is joined.\n         * This is available when join was made using \"post.category\" syntax.\n         * Relation can be undefined if entityOrProperty is regular entity or custom table.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.entityOrProperty))\n                return undefined;\n            var relationOwnerSelection = this.queryExpressionMap.findAliasByName(this.parentAlias);\n            var relation = relationOwnerSelection.metadata.findRelationWithPropertyPath(this.relationPropertyPath);\n            if (relation) {\n                return relation;\n            }\n            if (relationOwnerSelection.metadata.parentEntityMetadata) {\n                relation = relationOwnerSelection.metadata.parentEntityMetadata.findRelationWithPropertyPath(this.relationPropertyPath);\n                if (relation) {\n                    return relation;\n                }\n            }\n            throw new Error(\"Relation with property path \" + this.relationPropertyPath + \" in entity was not found.\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"metadata\", {\n        /**\n         * Metadata of the joined entity.\n         * If table without entity was joined, then it will return undefined.\n         */\n        get: function () {\n            // entityOrProperty is relation, e.g. \"post.category\"\n            if (this.relation)\n                return this.relation.inverseEntityMetadata;\n            // entityOrProperty is Entity class\n            if (this.connection.hasMetadata(this.entityOrProperty))\n                return this.connection.getMetadata(this.entityOrProperty);\n            return undefined;\n            /*if (typeof this.entityOrProperty === \"string\") { // entityOrProperty is a custom table\n    \n                // first try to find entity with such name, this is needed when entity does not have a target class,\n                // and its target is a string name (scenario when plain old javascript is used or entity schema is loaded from files)\n                const metadata = this.connection.entityMetadatas.find(metadata => metadata.name === this.entityOrProperty);\n                if (metadata)\n                    return metadata;\n    \n                // check if we have entity with such table name, and use its metadata if found\n                return this.connection.entityMetadatas.find(metadata => metadata.tableName === this.entityOrProperty);\n            }*/\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"junctionAlias\", {\n        /**\n         * Generates alias of junction table, whose ids we get.\n         */\n        get: function () {\n            if (!this.relation)\n                throw new Error(\"Cannot get junction table for join without relation.\");\n            return this.relation.isOwning ? this.parentAlias + \"_\" + this.alias.name : this.alias.name + \"_\" + this.parentAlias;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"mapToPropertyParentAlias\", {\n        get: function () {\n            if (!this.mapToProperty)\n                return undefined;\n            return this.mapToProperty.split(\".\")[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"mapToPropertyPropertyName\", {\n        get: function () {\n            if (!this.mapToProperty)\n                return undefined;\n            return this.mapToProperty.split(\".\")[1];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return JoinAttribute;\n}());\nexports.JoinAttribute = JoinAttribute;\n\n//# sourceMappingURL=JoinAttribute.js.map\n"},"lineCount":184}},"hash":"bf60225ca4815e4f8e769c6f5991286c","cacheData":{"env":{}}}