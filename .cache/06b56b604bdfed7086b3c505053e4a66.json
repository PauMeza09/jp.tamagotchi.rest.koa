{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000},{"name":"../util/DirectoryExportedClassesLoader","loc":{"line":3,"column":47}},{"name":"../util/OrmUtils","loc":{"line":4,"column":25}},{"name":"../container","loc":{"line":5,"column":26}},{"name":"../index","loc":{"line":6,"column":22}},{"name":"../metadata-builder/EntityMetadataBuilder","loc":{"line":7,"column":38}},{"name":"../entity-schema/EntitySchemaTransformer","loc":{"line":8,"column":40}},{"name":"../entity-schema/EntitySchema","loc":{"line":9,"column":29}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DirectoryExportedClassesLoader_1 = require(\"../util/DirectoryExportedClassesLoader\");\nvar OrmUtils_1 = require(\"../util/OrmUtils\");\nvar container_1 = require(\"../container\");\nvar index_1 = require(\"../index\");\nvar EntityMetadataBuilder_1 = require(\"../metadata-builder/EntityMetadataBuilder\");\nvar EntitySchemaTransformer_1 = require(\"../entity-schema/EntitySchemaTransformer\");\nvar EntitySchema_1 = require(\"../entity-schema/EntitySchema\");\n/**\n * Builds migration instances, subscriber instances and entity metadatas for the given classes.\n */\nvar ConnectionMetadataBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ConnectionMetadataBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds migration instances for the given classes or directories.\n     */\n    ConnectionMetadataBuilder.prototype.buildMigrations = function (migrations) {\n        var _a = OrmUtils_1.OrmUtils.splitClassesAndStrings(migrations), migrationClasses = _a[0], migrationDirectories = _a[1];\n        var allMigrationClasses = migrationClasses.concat(DirectoryExportedClassesLoader_1.importClassesFromDirectories(migrationDirectories));\n        return allMigrationClasses.map(function (migrationClass) { return container_1.getFromContainer(migrationClass); });\n    };\n    /**\n     * Builds subscriber instances for the given classes or directories.\n     */\n    ConnectionMetadataBuilder.prototype.buildSubscribers = function (subscribers) {\n        var _a = OrmUtils_1.OrmUtils.splitClassesAndStrings(subscribers || []), subscriberClasses = _a[0], subscriberDirectories = _a[1];\n        var allSubscriberClasses = subscriberClasses.concat(DirectoryExportedClassesLoader_1.importClassesFromDirectories(subscriberDirectories));\n        return index_1.getMetadataArgsStorage()\n            .filterSubscribers(allSubscriberClasses)\n            .map(function (metadata) { return container_1.getFromContainer(metadata.target); });\n    };\n    /**\n     * Builds entity metadatas for the given classes or directories.\n     */\n    ConnectionMetadataBuilder.prototype.buildEntityMetadatas = function (entities) {\n        // todo: instead we need to merge multiple metadata args storages\n        var _a = OrmUtils_1.OrmUtils.splitClassesAndStrings(entities || []), entityClassesOrSchemas = _a[0], entityDirectories = _a[1];\n        var entityClasses = entityClassesOrSchemas.filter(function (entityClass) { return (entityClass instanceof EntitySchema_1.EntitySchema) === false; });\n        var entitySchemas = entityClassesOrSchemas.filter(function (entityClass) { return entityClass instanceof EntitySchema_1.EntitySchema; });\n        var allEntityClasses = entityClasses.concat(DirectoryExportedClassesLoader_1.importClassesFromDirectories(entityDirectories));\n        allEntityClasses.forEach(function (entityClass) {\n            if (entityClass instanceof EntitySchema_1.EntitySchema) {\n                entitySchemas.push(entityClass);\n                allEntityClasses.slice(allEntityClasses.indexOf(entityClass), 1);\n            }\n        });\n        var decoratorEntityMetadatas = new EntityMetadataBuilder_1.EntityMetadataBuilder(this.connection, index_1.getMetadataArgsStorage()).build(allEntityClasses);\n        var metadataArgsStorageFromSchema = new EntitySchemaTransformer_1.EntitySchemaTransformer().transform(entitySchemas);\n        var schemaEntityMetadatas = new EntityMetadataBuilder_1.EntityMetadataBuilder(this.connection, metadataArgsStorageFromSchema).build();\n        return decoratorEntityMetadatas.concat(schemaEntityMetadatas);\n    };\n    return ConnectionMetadataBuilder;\n}());\nexports.ConnectionMetadataBuilder = ConnectionMetadataBuilder;\n\n//# sourceMappingURL=ConnectionMetadataBuilder.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}}],"sources":{"../node_modules/typeorm/connection/ConnectionMetadataBuilder.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DirectoryExportedClassesLoader_1 = require(\"../util/DirectoryExportedClassesLoader\");\nvar OrmUtils_1 = require(\"../util/OrmUtils\");\nvar container_1 = require(\"../container\");\nvar index_1 = require(\"../index\");\nvar EntityMetadataBuilder_1 = require(\"../metadata-builder/EntityMetadataBuilder\");\nvar EntitySchemaTransformer_1 = require(\"../entity-schema/EntitySchemaTransformer\");\nvar EntitySchema_1 = require(\"../entity-schema/EntitySchema\");\n/**\n * Builds migration instances, subscriber instances and entity metadatas for the given classes.\n */\nvar ConnectionMetadataBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ConnectionMetadataBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds migration instances for the given classes or directories.\n     */\n    ConnectionMetadataBuilder.prototype.buildMigrations = function (migrations) {\n        var _a = OrmUtils_1.OrmUtils.splitClassesAndStrings(migrations), migrationClasses = _a[0], migrationDirectories = _a[1];\n        var allMigrationClasses = migrationClasses.concat(DirectoryExportedClassesLoader_1.importClassesFromDirectories(migrationDirectories));\n        return allMigrationClasses.map(function (migrationClass) { return container_1.getFromContainer(migrationClass); });\n    };\n    /**\n     * Builds subscriber instances for the given classes or directories.\n     */\n    ConnectionMetadataBuilder.prototype.buildSubscribers = function (subscribers) {\n        var _a = OrmUtils_1.OrmUtils.splitClassesAndStrings(subscribers || []), subscriberClasses = _a[0], subscriberDirectories = _a[1];\n        var allSubscriberClasses = subscriberClasses.concat(DirectoryExportedClassesLoader_1.importClassesFromDirectories(subscriberDirectories));\n        return index_1.getMetadataArgsStorage()\n            .filterSubscribers(allSubscriberClasses)\n            .map(function (metadata) { return container_1.getFromContainer(metadata.target); });\n    };\n    /**\n     * Builds entity metadatas for the given classes or directories.\n     */\n    ConnectionMetadataBuilder.prototype.buildEntityMetadatas = function (entities) {\n        // todo: instead we need to merge multiple metadata args storages\n        var _a = OrmUtils_1.OrmUtils.splitClassesAndStrings(entities || []), entityClassesOrSchemas = _a[0], entityDirectories = _a[1];\n        var entityClasses = entityClassesOrSchemas.filter(function (entityClass) { return (entityClass instanceof EntitySchema_1.EntitySchema) === false; });\n        var entitySchemas = entityClassesOrSchemas.filter(function (entityClass) { return entityClass instanceof EntitySchema_1.EntitySchema; });\n        var allEntityClasses = entityClasses.concat(DirectoryExportedClassesLoader_1.importClassesFromDirectories(entityDirectories));\n        allEntityClasses.forEach(function (entityClass) {\n            if (entityClass instanceof EntitySchema_1.EntitySchema) {\n                entitySchemas.push(entityClass);\n                allEntityClasses.slice(allEntityClasses.indexOf(entityClass), 1);\n            }\n        });\n        var decoratorEntityMetadatas = new EntityMetadataBuilder_1.EntityMetadataBuilder(this.connection, index_1.getMetadataArgsStorage()).build(allEntityClasses);\n        var metadataArgsStorageFromSchema = new EntitySchemaTransformer_1.EntitySchemaTransformer().transform(entitySchemas);\n        var schemaEntityMetadatas = new EntityMetadataBuilder_1.EntityMetadataBuilder(this.connection, metadataArgsStorageFromSchema).build();\n        return decoratorEntityMetadatas.concat(schemaEntityMetadatas);\n    };\n    return ConnectionMetadataBuilder;\n}());\nexports.ConnectionMetadataBuilder = ConnectionMetadataBuilder;\n\n//# sourceMappingURL=ConnectionMetadataBuilder.js.map\n"},"lineCount":66}},"hash":"92b5fee2187a7942c1942c1064951c13","cacheData":{"env":{}}}