{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000},{"name":"./RedisQueryResultCache","loc":{"line":3,"column":38}},{"name":"./DbQueryResultCache","loc":{"line":4,"column":35}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RedisQueryResultCache_1 = require(\"./RedisQueryResultCache\");\nvar DbQueryResultCache_1 = require(\"./DbQueryResultCache\");\n/**\n * Caches query result into Redis database.\n */\nvar QueryResultCacheFactory = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function QueryResultCacheFactory(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new query result cache based on connection options.\n     */\n    QueryResultCacheFactory.prototype.create = function () {\n        if (!this.connection.options.cache)\n            throw new Error(\"To use cache you need to enable it in connection options by setting cache: true or providing some caching options. Example: { host: ..., username: ..., cache: true }\");\n        if (this.connection.options.cache.type === \"redis\")\n            return new RedisQueryResultCache_1.RedisQueryResultCache(this.connection);\n        return new DbQueryResultCache_1.DbQueryResultCache(this.connection);\n    };\n    return QueryResultCacheFactory;\n}());\nexports.QueryResultCacheFactory = QueryResultCacheFactory;\n\n//# sourceMappingURL=QueryResultCacheFactory.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeorm/cache/QueryResultCacheFactory.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"../node_modules/typeorm/cache/QueryResultCacheFactory.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RedisQueryResultCache_1 = require(\"./RedisQueryResultCache\");\nvar DbQueryResultCache_1 = require(\"./DbQueryResultCache\");\n/**\n * Caches query result into Redis database.\n */\nvar QueryResultCacheFactory = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function QueryResultCacheFactory(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new query result cache based on connection options.\n     */\n    QueryResultCacheFactory.prototype.create = function () {\n        if (!this.connection.options.cache)\n            throw new Error(\"To use cache you need to enable it in connection options by setting cache: true or providing some caching options. Example: { host: ..., username: ..., cache: true }\");\n        if (this.connection.options.cache.type === \"redis\")\n            return new RedisQueryResultCache_1.RedisQueryResultCache(this.connection);\n        return new DbQueryResultCache_1.DbQueryResultCache(this.connection);\n    };\n    return QueryResultCacheFactory;\n}());\nexports.QueryResultCacheFactory = QueryResultCacheFactory;\n\n//# sourceMappingURL=QueryResultCacheFactory.js.map\n"},"lineCount":33}},"hash":"536be14410eea705bcb18ee9c601dace","cacheData":{"env":{}}}