{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000},{"name":"../metadata/EntityMetadata","loc":{"line":3,"column":31}},{"name":"../metadata/ColumnMetadata","loc":{"line":4,"column":31}},{"name":"../metadata/ForeignKeyMetadata","loc":{"line":5,"column":35}},{"name":"../metadata/IndexMetadata","loc":{"line":6,"column":30}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EntityMetadata_1 = require(\"../metadata/EntityMetadata\");\nvar ColumnMetadata_1 = require(\"../metadata/ColumnMetadata\");\nvar ForeignKeyMetadata_1 = require(\"../metadata/ForeignKeyMetadata\");\nvar IndexMetadata_1 = require(\"../metadata/IndexMetadata\");\n/**\n * Creates EntityMetadata for junction tables.\n * Junction tables are tables generated by many-to-many relations.\n */\nvar JunctionEntityMetadataBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function JunctionEntityMetadataBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds EntityMetadata for the junction of the given many-to-many relation.\n     */\n    JunctionEntityMetadataBuilder.prototype.build = function (relation, joinTable) {\n        var _this = this;\n        var referencedColumns = this.collectReferencedColumns(relation, joinTable);\n        var inverseReferencedColumns = this.collectInverseReferencedColumns(relation, joinTable);\n        var joinTableName = joinTable.name || this.connection.namingStrategy.joinTableName(relation.entityMetadata.tableNameWithoutPrefix, relation.inverseEntityMetadata.tableNameWithoutPrefix, relation.propertyPath, relation.inverseRelation ? relation.inverseRelation.propertyName : \"\");\n        var entityMetadata = new EntityMetadata_1.EntityMetadata({\n            connection: this.connection,\n            args: {\n                target: \"\",\n                name: joinTableName,\n                type: \"junction\",\n                database: joinTable.database || relation.entityMetadata.database,\n                schema: joinTable.schema || relation.entityMetadata.schema,\n            }\n        });\n        entityMetadata.build();\n        // create original side junction columns\n        var junctionColumns = referencedColumns.map(function (referencedColumn) {\n            var joinColumn = joinTable.joinColumns ? joinTable.joinColumns.find(function (joinColumnArgs) {\n                return (!joinColumnArgs.referencedColumnName || joinColumnArgs.referencedColumnName === referencedColumn.propertyName) &&\n                    !!joinColumnArgs.name;\n            }) : undefined;\n            var columnName = joinColumn && joinColumn.name ? joinColumn.name\n                : _this.connection.namingStrategy.joinTableColumnName(relation.entityMetadata.tableNameWithoutPrefix, referencedColumn.propertyName, referencedColumn.databaseName);\n            return new ColumnMetadata_1.ColumnMetadata({\n                connection: _this.connection,\n                entityMetadata: entityMetadata,\n                referencedColumn: referencedColumn,\n                args: {\n                    target: \"\",\n                    mode: \"virtual\",\n                    propertyName: columnName,\n                    options: {\n                        name: columnName,\n                        length: referencedColumn.length,\n                        width: referencedColumn.width,\n                        type: referencedColumn.type,\n                        precision: referencedColumn.precision,\n                        scale: referencedColumn.scale,\n                        charset: referencedColumn.charset,\n                        collation: referencedColumn.collation,\n                        zerofill: referencedColumn.zerofill,\n                        unsigned: referencedColumn.zerofill ? true : referencedColumn.unsigned,\n                        nullable: false,\n                        primary: true,\n                    }\n                }\n            });\n        });\n        // create inverse side junction columns\n        var inverseJunctionColumns = inverseReferencedColumns.map(function (inverseReferencedColumn) {\n            var joinColumn = joinTable.inverseJoinColumns ? joinTable.inverseJoinColumns.find(function (joinColumnArgs) {\n                return (!joinColumnArgs.referencedColumnName || joinColumnArgs.referencedColumnName === inverseReferencedColumn.propertyName) &&\n                    !!joinColumnArgs.name;\n            }) : undefined;\n            var columnName = joinColumn && joinColumn.name ? joinColumn.name\n                : _this.connection.namingStrategy.joinTableInverseColumnName(relation.inverseEntityMetadata.tableNameWithoutPrefix, inverseReferencedColumn.propertyName, inverseReferencedColumn.databaseName);\n            return new ColumnMetadata_1.ColumnMetadata({\n                connection: _this.connection,\n                entityMetadata: entityMetadata,\n                referencedColumn: inverseReferencedColumn,\n                args: {\n                    target: \"\",\n                    mode: \"virtual\",\n                    propertyName: columnName,\n                    options: {\n                        length: inverseReferencedColumn.length,\n                        type: inverseReferencedColumn.type,\n                        precision: inverseReferencedColumn.precision,\n                        scale: inverseReferencedColumn.scale,\n                        charset: inverseReferencedColumn.charset,\n                        collation: inverseReferencedColumn.collation,\n                        zerofill: inverseReferencedColumn.zerofill,\n                        unsigned: inverseReferencedColumn.zerofill ? true : inverseReferencedColumn.unsigned,\n                        name: columnName,\n                        nullable: false,\n                        primary: true,\n                    }\n                }\n            });\n        });\n        this.changeDuplicatedColumnNames(junctionColumns, inverseJunctionColumns);\n        // set junction table columns\n        entityMetadata.ownerColumns = junctionColumns;\n        entityMetadata.inverseColumns = inverseJunctionColumns;\n        entityMetadata.ownColumns = junctionColumns.concat(inverseJunctionColumns);\n        entityMetadata.ownColumns.forEach(function (column) { return column.relationMetadata = relation; });\n        // create junction table foreign keys\n        entityMetadata.foreignKeys = [\n            new ForeignKeyMetadata_1.ForeignKeyMetadata({\n                entityMetadata: entityMetadata,\n                referencedEntityMetadata: relation.entityMetadata,\n                columns: junctionColumns,\n                referencedColumns: referencedColumns,\n                onDelete: \"CASCADE\"\n            }),\n            new ForeignKeyMetadata_1.ForeignKeyMetadata({\n                entityMetadata: entityMetadata,\n                referencedEntityMetadata: relation.inverseEntityMetadata,\n                columns: inverseJunctionColumns,\n                referencedColumns: inverseReferencedColumns,\n                onDelete: \"CASCADE\"\n            }),\n        ];\n        // create junction table indices\n        entityMetadata.indices = [\n            new IndexMetadata_1.IndexMetadata({\n                entityMetadata: entityMetadata,\n                columns: junctionColumns,\n                args: {\n                    target: \"\",\n                    unique: false\n                }\n            }),\n            new IndexMetadata_1.IndexMetadata({\n                entityMetadata: entityMetadata,\n                columns: inverseJunctionColumns,\n                args: {\n                    target: \"\",\n                    unique: false\n                }\n            })\n        ];\n        // finally return entity metadata\n        return entityMetadata;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Collects referenced columns from the given join column args.\n     */\n    JunctionEntityMetadataBuilder.prototype.collectReferencedColumns = function (relation, joinTable) {\n        var hasAnyReferencedColumnName = joinTable.joinColumns ? joinTable.joinColumns.find(function (joinColumn) { return !!joinColumn.referencedColumnName; }) : false;\n        if (!joinTable.joinColumns || (joinTable.joinColumns && !hasAnyReferencedColumnName)) {\n            return relation.entityMetadata.columns.filter(function (column) { return column.isPrimary; });\n        }\n        else {\n            return joinTable.joinColumns.map(function (joinColumn) {\n                var referencedColumn = relation.entityMetadata.columns.find(function (column) { return column.propertyName === joinColumn.referencedColumnName; });\n                if (!referencedColumn)\n                    throw new Error(\"Referenced column \" + joinColumn.referencedColumnName + \" was not found in entity \" + relation.entityMetadata.name);\n                return referencedColumn;\n            });\n        }\n    };\n    /**\n     * Collects inverse referenced columns from the given join column args.\n     */\n    JunctionEntityMetadataBuilder.prototype.collectInverseReferencedColumns = function (relation, joinTable) {\n        var hasInverseJoinColumns = !!joinTable.inverseJoinColumns;\n        var hasAnyInverseReferencedColumnName = hasInverseJoinColumns ? joinTable.inverseJoinColumns.find(function (joinColumn) { return !!joinColumn.referencedColumnName; }) : false;\n        if (!hasInverseJoinColumns || (hasInverseJoinColumns && !hasAnyInverseReferencedColumnName)) {\n            return relation.inverseEntityMetadata.primaryColumns;\n        }\n        else {\n            return joinTable.inverseJoinColumns.map(function (joinColumn) {\n                var referencedColumn = relation.inverseEntityMetadata.ownColumns.find(function (column) { return column.propertyName === joinColumn.referencedColumnName; });\n                if (!referencedColumn)\n                    throw new Error(\"Referenced column \" + joinColumn.referencedColumnName + \" was not found in entity \" + relation.inverseEntityMetadata.name);\n                return referencedColumn;\n            });\n        }\n    };\n    JunctionEntityMetadataBuilder.prototype.changeDuplicatedColumnNames = function (junctionColumns, inverseJunctionColumns) {\n        var _this = this;\n        junctionColumns.forEach(function (junctionColumn) {\n            inverseJunctionColumns.forEach(function (inverseJunctionColumn) {\n                if (junctionColumn.givenDatabaseName === inverseJunctionColumn.givenDatabaseName) {\n                    var junctionColumnName = _this.connection.namingStrategy.joinTableColumnDuplicationPrefix(junctionColumn.propertyName, 1);\n                    junctionColumn.propertyName = junctionColumnName;\n                    junctionColumn.givenDatabaseName = junctionColumnName;\n                    var inverseJunctionColumnName = _this.connection.namingStrategy.joinTableColumnDuplicationPrefix(inverseJunctionColumn.propertyName, 2);\n                    inverseJunctionColumn.propertyName = inverseJunctionColumnName;\n                    inverseJunctionColumn.givenDatabaseName = inverseJunctionColumnName;\n                }\n            });\n        });\n    };\n    return JunctionEntityMetadataBuilder;\n}());\nexports.JunctionEntityMetadataBuilder = JunctionEntityMetadataBuilder;\n\n//# sourceMappingURL=JunctionEntityMetadataBuilder.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}}],"sources":{"../node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EntityMetadata_1 = require(\"../metadata/EntityMetadata\");\nvar ColumnMetadata_1 = require(\"../metadata/ColumnMetadata\");\nvar ForeignKeyMetadata_1 = require(\"../metadata/ForeignKeyMetadata\");\nvar IndexMetadata_1 = require(\"../metadata/IndexMetadata\");\n/**\n * Creates EntityMetadata for junction tables.\n * Junction tables are tables generated by many-to-many relations.\n */\nvar JunctionEntityMetadataBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function JunctionEntityMetadataBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds EntityMetadata for the junction of the given many-to-many relation.\n     */\n    JunctionEntityMetadataBuilder.prototype.build = function (relation, joinTable) {\n        var _this = this;\n        var referencedColumns = this.collectReferencedColumns(relation, joinTable);\n        var inverseReferencedColumns = this.collectInverseReferencedColumns(relation, joinTable);\n        var joinTableName = joinTable.name || this.connection.namingStrategy.joinTableName(relation.entityMetadata.tableNameWithoutPrefix, relation.inverseEntityMetadata.tableNameWithoutPrefix, relation.propertyPath, relation.inverseRelation ? relation.inverseRelation.propertyName : \"\");\n        var entityMetadata = new EntityMetadata_1.EntityMetadata({\n            connection: this.connection,\n            args: {\n                target: \"\",\n                name: joinTableName,\n                type: \"junction\",\n                database: joinTable.database || relation.entityMetadata.database,\n                schema: joinTable.schema || relation.entityMetadata.schema,\n            }\n        });\n        entityMetadata.build();\n        // create original side junction columns\n        var junctionColumns = referencedColumns.map(function (referencedColumn) {\n            var joinColumn = joinTable.joinColumns ? joinTable.joinColumns.find(function (joinColumnArgs) {\n                return (!joinColumnArgs.referencedColumnName || joinColumnArgs.referencedColumnName === referencedColumn.propertyName) &&\n                    !!joinColumnArgs.name;\n            }) : undefined;\n            var columnName = joinColumn && joinColumn.name ? joinColumn.name\n                : _this.connection.namingStrategy.joinTableColumnName(relation.entityMetadata.tableNameWithoutPrefix, referencedColumn.propertyName, referencedColumn.databaseName);\n            return new ColumnMetadata_1.ColumnMetadata({\n                connection: _this.connection,\n                entityMetadata: entityMetadata,\n                referencedColumn: referencedColumn,\n                args: {\n                    target: \"\",\n                    mode: \"virtual\",\n                    propertyName: columnName,\n                    options: {\n                        name: columnName,\n                        length: referencedColumn.length,\n                        width: referencedColumn.width,\n                        type: referencedColumn.type,\n                        precision: referencedColumn.precision,\n                        scale: referencedColumn.scale,\n                        charset: referencedColumn.charset,\n                        collation: referencedColumn.collation,\n                        zerofill: referencedColumn.zerofill,\n                        unsigned: referencedColumn.zerofill ? true : referencedColumn.unsigned,\n                        nullable: false,\n                        primary: true,\n                    }\n                }\n            });\n        });\n        // create inverse side junction columns\n        var inverseJunctionColumns = inverseReferencedColumns.map(function (inverseReferencedColumn) {\n            var joinColumn = joinTable.inverseJoinColumns ? joinTable.inverseJoinColumns.find(function (joinColumnArgs) {\n                return (!joinColumnArgs.referencedColumnName || joinColumnArgs.referencedColumnName === inverseReferencedColumn.propertyName) &&\n                    !!joinColumnArgs.name;\n            }) : undefined;\n            var columnName = joinColumn && joinColumn.name ? joinColumn.name\n                : _this.connection.namingStrategy.joinTableInverseColumnName(relation.inverseEntityMetadata.tableNameWithoutPrefix, inverseReferencedColumn.propertyName, inverseReferencedColumn.databaseName);\n            return new ColumnMetadata_1.ColumnMetadata({\n                connection: _this.connection,\n                entityMetadata: entityMetadata,\n                referencedColumn: inverseReferencedColumn,\n                args: {\n                    target: \"\",\n                    mode: \"virtual\",\n                    propertyName: columnName,\n                    options: {\n                        length: inverseReferencedColumn.length,\n                        type: inverseReferencedColumn.type,\n                        precision: inverseReferencedColumn.precision,\n                        scale: inverseReferencedColumn.scale,\n                        charset: inverseReferencedColumn.charset,\n                        collation: inverseReferencedColumn.collation,\n                        zerofill: inverseReferencedColumn.zerofill,\n                        unsigned: inverseReferencedColumn.zerofill ? true : inverseReferencedColumn.unsigned,\n                        name: columnName,\n                        nullable: false,\n                        primary: true,\n                    }\n                }\n            });\n        });\n        this.changeDuplicatedColumnNames(junctionColumns, inverseJunctionColumns);\n        // set junction table columns\n        entityMetadata.ownerColumns = junctionColumns;\n        entityMetadata.inverseColumns = inverseJunctionColumns;\n        entityMetadata.ownColumns = junctionColumns.concat(inverseJunctionColumns);\n        entityMetadata.ownColumns.forEach(function (column) { return column.relationMetadata = relation; });\n        // create junction table foreign keys\n        entityMetadata.foreignKeys = [\n            new ForeignKeyMetadata_1.ForeignKeyMetadata({\n                entityMetadata: entityMetadata,\n                referencedEntityMetadata: relation.entityMetadata,\n                columns: junctionColumns,\n                referencedColumns: referencedColumns,\n                onDelete: \"CASCADE\"\n            }),\n            new ForeignKeyMetadata_1.ForeignKeyMetadata({\n                entityMetadata: entityMetadata,\n                referencedEntityMetadata: relation.inverseEntityMetadata,\n                columns: inverseJunctionColumns,\n                referencedColumns: inverseReferencedColumns,\n                onDelete: \"CASCADE\"\n            }),\n        ];\n        // create junction table indices\n        entityMetadata.indices = [\n            new IndexMetadata_1.IndexMetadata({\n                entityMetadata: entityMetadata,\n                columns: junctionColumns,\n                args: {\n                    target: \"\",\n                    unique: false\n                }\n            }),\n            new IndexMetadata_1.IndexMetadata({\n                entityMetadata: entityMetadata,\n                columns: inverseJunctionColumns,\n                args: {\n                    target: \"\",\n                    unique: false\n                }\n            })\n        ];\n        // finally return entity metadata\n        return entityMetadata;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Collects referenced columns from the given join column args.\n     */\n    JunctionEntityMetadataBuilder.prototype.collectReferencedColumns = function (relation, joinTable) {\n        var hasAnyReferencedColumnName = joinTable.joinColumns ? joinTable.joinColumns.find(function (joinColumn) { return !!joinColumn.referencedColumnName; }) : false;\n        if (!joinTable.joinColumns || (joinTable.joinColumns && !hasAnyReferencedColumnName)) {\n            return relation.entityMetadata.columns.filter(function (column) { return column.isPrimary; });\n        }\n        else {\n            return joinTable.joinColumns.map(function (joinColumn) {\n                var referencedColumn = relation.entityMetadata.columns.find(function (column) { return column.propertyName === joinColumn.referencedColumnName; });\n                if (!referencedColumn)\n                    throw new Error(\"Referenced column \" + joinColumn.referencedColumnName + \" was not found in entity \" + relation.entityMetadata.name);\n                return referencedColumn;\n            });\n        }\n    };\n    /**\n     * Collects inverse referenced columns from the given join column args.\n     */\n    JunctionEntityMetadataBuilder.prototype.collectInverseReferencedColumns = function (relation, joinTable) {\n        var hasInverseJoinColumns = !!joinTable.inverseJoinColumns;\n        var hasAnyInverseReferencedColumnName = hasInverseJoinColumns ? joinTable.inverseJoinColumns.find(function (joinColumn) { return !!joinColumn.referencedColumnName; }) : false;\n        if (!hasInverseJoinColumns || (hasInverseJoinColumns && !hasAnyInverseReferencedColumnName)) {\n            return relation.inverseEntityMetadata.primaryColumns;\n        }\n        else {\n            return joinTable.inverseJoinColumns.map(function (joinColumn) {\n                var referencedColumn = relation.inverseEntityMetadata.ownColumns.find(function (column) { return column.propertyName === joinColumn.referencedColumnName; });\n                if (!referencedColumn)\n                    throw new Error(\"Referenced column \" + joinColumn.referencedColumnName + \" was not found in entity \" + relation.inverseEntityMetadata.name);\n                return referencedColumn;\n            });\n        }\n    };\n    JunctionEntityMetadataBuilder.prototype.changeDuplicatedColumnNames = function (junctionColumns, inverseJunctionColumns) {\n        var _this = this;\n        junctionColumns.forEach(function (junctionColumn) {\n            inverseJunctionColumns.forEach(function (inverseJunctionColumn) {\n                if (junctionColumn.givenDatabaseName === inverseJunctionColumn.givenDatabaseName) {\n                    var junctionColumnName = _this.connection.namingStrategy.joinTableColumnDuplicationPrefix(junctionColumn.propertyName, 1);\n                    junctionColumn.propertyName = junctionColumnName;\n                    junctionColumn.givenDatabaseName = junctionColumnName;\n                    var inverseJunctionColumnName = _this.connection.namingStrategy.joinTableColumnDuplicationPrefix(inverseJunctionColumn.propertyName, 2);\n                    inverseJunctionColumn.propertyName = inverseJunctionColumnName;\n                    inverseJunctionColumn.givenDatabaseName = inverseJunctionColumnName;\n                }\n            });\n        });\n    };\n    return JunctionEntityMetadataBuilder;\n}());\nexports.JunctionEntityMetadataBuilder = JunctionEntityMetadataBuilder;\n\n//# sourceMappingURL=JunctionEntityMetadataBuilder.js.map\n"},"lineCount":208}},"hash":"3eba7574023100e3117e0668901274e9","cacheData":{"env":{}}}