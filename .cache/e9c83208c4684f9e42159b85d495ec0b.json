{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n */\nvar LoadMapItem = /** @class */ (function () {\n    function LoadMapItem(plainEntity, metadata, parentLoadMapItem, relation) {\n        this.plainEntity = plainEntity;\n        this.metadata = metadata;\n        this.parentLoadMapItem = parentLoadMapItem;\n        this.relation = relation;\n    }\n    Object.defineProperty(LoadMapItem.prototype, \"target\", {\n        get: function () {\n            return this.metadata.target;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoadMapItem.prototype, \"id\", {\n        get: function () {\n            return this.metadata.getEntityIdMixedMap(this.plainEntity);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LoadMapItem;\n}());\nvar LoadMap = /** @class */ (function () {\n    function LoadMap() {\n        this.loadMapItems = [];\n    }\n    Object.defineProperty(LoadMap.prototype, \"mainLoadMapItem\", {\n        get: function () {\n            return this.loadMapItems.find(function (item) { return !item.relation && !item.parentLoadMapItem; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoadMap.prototype.addLoadMap = function (newLoadMap) {\n        var item = this.loadMapItems.find(function (item) { return item.target === newLoadMap.target && item.id === newLoadMap.id; });\n        if (!item)\n            this.loadMapItems.push(newLoadMap);\n    };\n    LoadMap.prototype.fillEntities = function (target, entities) {\n        var _this = this;\n        entities.forEach(function (entity) {\n            var item = _this.loadMapItems.find(function (loadMapItem) {\n                return loadMapItem.target === target && loadMapItem.metadata.compareEntities(entity, loadMapItem.plainEntity);\n            });\n            if (item)\n                item.entity = entity;\n        });\n    };\n    LoadMap.prototype.groupByTargetIds = function () {\n        var groups = [];\n        this.loadMapItems.forEach(function (loadMapItem) {\n            var group = groups.find(function (group) { return group.target === loadMapItem.target; });\n            if (!group) {\n                group = { target: loadMapItem.target, ids: [] };\n                groups.push(group);\n            }\n            group.ids.push(loadMapItem.id);\n        });\n        return groups;\n    };\n    return LoadMap;\n}());\n/**\n * Transforms plain old javascript object\n * Entity is constructed based on its entity metadata.\n */\nvar PlainObjectToDatabaseEntityTransformer = /** @class */ (function () {\n    function PlainObjectToDatabaseEntityTransformer(manager) {\n        this.manager = manager;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    PlainObjectToDatabaseEntityTransformer.prototype.transform = function (plainObject, metadata) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var loadMap, fillLoadMap;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // if plain object does not have id then nothing to load really\n                        if (!metadata.hasAllPrimaryKeys(plainObject))\n                            return [2 /*return*/, Promise.reject(\"Given object does not have a primary column, cannot transform it to database entity.\")];\n                        loadMap = new LoadMap();\n                        fillLoadMap = function (entity, entityMetadata, parentLoadMapItem, relation) {\n                            var item = new LoadMapItem(entity, entityMetadata, parentLoadMapItem, relation);\n                            loadMap.addLoadMap(item);\n                            entityMetadata\n                                .extractRelationValuesFromEntity(entity, metadata.relations)\n                                .filter(function (value) { return value !== null && value !== undefined; })\n                                .forEach(function (_a) {\n                                var relation = _a[0], value = _a[1], inverseEntityMetadata = _a[2];\n                                return fillLoadMap(value, inverseEntityMetadata, item, relation);\n                            });\n                        };\n                        fillLoadMap(plainObject, metadata);\n                        // load all entities and store them in the load map\n                        return [4 /*yield*/, Promise.all(loadMap.groupByTargetIds().map(function (targetWithIds) {\n                                return _this.manager\n                                    .findByIds(targetWithIds.target, targetWithIds.ids)\n                                    .then(function (entities) { return loadMap.fillEntities(targetWithIds.target, entities); });\n                            }))];\n                    case 1:\n                        // load all entities and store them in the load map\n                        _a.sent();\n                        // go through each item in the load map and set their entity relationship using metadata stored in load map\n                        loadMap.loadMapItems.forEach(function (loadMapItem) {\n                            if (!loadMapItem.relation ||\n                                !loadMapItem.entity ||\n                                !loadMapItem.parentLoadMapItem ||\n                                !loadMapItem.parentLoadMapItem.entity)\n                                return;\n                            if (loadMapItem.relation.isManyToMany || loadMapItem.relation.isOneToMany) {\n                                if (!loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName])\n                                    loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName] = [];\n                                loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName].push(loadMapItem.entity);\n                            }\n                            else {\n                                loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName] = loadMapItem.entity;\n                            }\n                        });\n                        return [2 /*return*/, loadMap.mainLoadMapItem ? loadMap.mainLoadMapItem.entity : undefined];\n                }\n            });\n        });\n    };\n    return PlainObjectToDatabaseEntityTransformer;\n}());\nexports.PlainObjectToDatabaseEntityTransformer = PlainObjectToDatabaseEntityTransformer;\n\n//# sourceMappingURL=PlainObjectToDatabaseEntityTransformer.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}}],"sources":{"../node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n */\nvar LoadMapItem = /** @class */ (function () {\n    function LoadMapItem(plainEntity, metadata, parentLoadMapItem, relation) {\n        this.plainEntity = plainEntity;\n        this.metadata = metadata;\n        this.parentLoadMapItem = parentLoadMapItem;\n        this.relation = relation;\n    }\n    Object.defineProperty(LoadMapItem.prototype, \"target\", {\n        get: function () {\n            return this.metadata.target;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoadMapItem.prototype, \"id\", {\n        get: function () {\n            return this.metadata.getEntityIdMixedMap(this.plainEntity);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LoadMapItem;\n}());\nvar LoadMap = /** @class */ (function () {\n    function LoadMap() {\n        this.loadMapItems = [];\n    }\n    Object.defineProperty(LoadMap.prototype, \"mainLoadMapItem\", {\n        get: function () {\n            return this.loadMapItems.find(function (item) { return !item.relation && !item.parentLoadMapItem; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoadMap.prototype.addLoadMap = function (newLoadMap) {\n        var item = this.loadMapItems.find(function (item) { return item.target === newLoadMap.target && item.id === newLoadMap.id; });\n        if (!item)\n            this.loadMapItems.push(newLoadMap);\n    };\n    LoadMap.prototype.fillEntities = function (target, entities) {\n        var _this = this;\n        entities.forEach(function (entity) {\n            var item = _this.loadMapItems.find(function (loadMapItem) {\n                return loadMapItem.target === target && loadMapItem.metadata.compareEntities(entity, loadMapItem.plainEntity);\n            });\n            if (item)\n                item.entity = entity;\n        });\n    };\n    LoadMap.prototype.groupByTargetIds = function () {\n        var groups = [];\n        this.loadMapItems.forEach(function (loadMapItem) {\n            var group = groups.find(function (group) { return group.target === loadMapItem.target; });\n            if (!group) {\n                group = { target: loadMapItem.target, ids: [] };\n                groups.push(group);\n            }\n            group.ids.push(loadMapItem.id);\n        });\n        return groups;\n    };\n    return LoadMap;\n}());\n/**\n * Transforms plain old javascript object\n * Entity is constructed based on its entity metadata.\n */\nvar PlainObjectToDatabaseEntityTransformer = /** @class */ (function () {\n    function PlainObjectToDatabaseEntityTransformer(manager) {\n        this.manager = manager;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    PlainObjectToDatabaseEntityTransformer.prototype.transform = function (plainObject, metadata) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var loadMap, fillLoadMap;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // if plain object does not have id then nothing to load really\n                        if (!metadata.hasAllPrimaryKeys(plainObject))\n                            return [2 /*return*/, Promise.reject(\"Given object does not have a primary column, cannot transform it to database entity.\")];\n                        loadMap = new LoadMap();\n                        fillLoadMap = function (entity, entityMetadata, parentLoadMapItem, relation) {\n                            var item = new LoadMapItem(entity, entityMetadata, parentLoadMapItem, relation);\n                            loadMap.addLoadMap(item);\n                            entityMetadata\n                                .extractRelationValuesFromEntity(entity, metadata.relations)\n                                .filter(function (value) { return value !== null && value !== undefined; })\n                                .forEach(function (_a) {\n                                var relation = _a[0], value = _a[1], inverseEntityMetadata = _a[2];\n                                return fillLoadMap(value, inverseEntityMetadata, item, relation);\n                            });\n                        };\n                        fillLoadMap(plainObject, metadata);\n                        // load all entities and store them in the load map\n                        return [4 /*yield*/, Promise.all(loadMap.groupByTargetIds().map(function (targetWithIds) {\n                                return _this.manager\n                                    .findByIds(targetWithIds.target, targetWithIds.ids)\n                                    .then(function (entities) { return loadMap.fillEntities(targetWithIds.target, entities); });\n                            }))];\n                    case 1:\n                        // load all entities and store them in the load map\n                        _a.sent();\n                        // go through each item in the load map and set their entity relationship using metadata stored in load map\n                        loadMap.loadMapItems.forEach(function (loadMapItem) {\n                            if (!loadMapItem.relation ||\n                                !loadMapItem.entity ||\n                                !loadMapItem.parentLoadMapItem ||\n                                !loadMapItem.parentLoadMapItem.entity)\n                                return;\n                            if (loadMapItem.relation.isManyToMany || loadMapItem.relation.isOneToMany) {\n                                if (!loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName])\n                                    loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName] = [];\n                                loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName].push(loadMapItem.entity);\n                            }\n                            else {\n                                loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName] = loadMapItem.entity;\n                            }\n                        });\n                        return [2 /*return*/, loadMap.mainLoadMapItem ? loadMap.mainLoadMapItem.entity : undefined];\n                }\n            });\n        });\n    };\n    return PlainObjectToDatabaseEntityTransformer;\n}());\nexports.PlainObjectToDatabaseEntityTransformer = PlainObjectToDatabaseEntityTransformer;\n\n//# sourceMappingURL=PlainObjectToDatabaseEntityTransformer.js.map\n"},"lineCount":172}},"hash":"603222eb9b195ad2cdb35ebe18b93045","cacheData":{"env":{}}}