{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000},{"name":"../../util/DateUtils","loc":{"line":38,"column":26}},{"name":"../../schema-builder/RdbmsSchemaBuilder","loc":{"line":39,"column":35}},{"name":"../../util/OrmUtils","loc":{"line":40,"column":25}}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DateUtils_1 = require(\"../../util/DateUtils\");\nvar RdbmsSchemaBuilder_1 = require(\"../../schema-builder/RdbmsSchemaBuilder\");\nvar OrmUtils_1 = require(\"../../util/OrmUtils\");\n/**\n * Organizes communication with sqlite DBMS.\n */\nvar AbstractSqliteDriver = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function AbstractSqliteDriver(connection) {\n        /**\n         * Indicates if replication is enabled.\n         */\n        this.isReplicated = false;\n        /**\n         * Indicates if tree tables are supported by this driver.\n         */\n        this.treeSupport = true;\n        /**\n         * Gets list of supported column data types by a driver.\n         *\n         * @see https://www.tutorialspoint.com/sqlite/sqlite_data_types.htm\n         * @see https://sqlite.org/datatype3.html\n         */\n        this.supportedDataTypes = [\n            \"int\",\n            \"integer\",\n            \"tinyint\",\n            \"smallint\",\n            \"mediumint\",\n            \"bigint\",\n            \"unsigned big int\",\n            \"int2\",\n            \"int8\",\n            \"integer\",\n            \"character\",\n            \"varchar\",\n            \"varying character\",\n            \"nchar\",\n            \"native character\",\n            \"nvarchar\",\n            \"text\",\n            \"clob\",\n            \"text\",\n            \"blob\",\n            \"real\",\n            \"double\",\n            \"double precision\",\n            \"float\",\n            \"real\",\n            \"numeric\",\n            \"decimal\",\n            \"boolean\",\n            \"date\",\n            \"time\",\n            \"datetime\"\n        ];\n        /**\n         * Gets list of column data types that support length by a driver.\n         */\n        this.withLengthColumnTypes = [\n            \"character\",\n            \"varchar\",\n            \"varying character\",\n            \"nchar\",\n            \"native character\",\n            \"nvarchar\",\n            \"text\",\n            \"blob\",\n            \"clob\"\n        ];\n        /**\n         * Gets list of spatial column data types.\n         */\n        this.spatialTypes = [];\n        /**\n         * Gets list of column data types that support precision by a driver.\n         */\n        this.withPrecisionColumnTypes = [];\n        /**\n         * Gets list of column data types that support scale by a driver.\n         */\n        this.withScaleColumnTypes = [];\n        /**\n         * Orm has special columns and we need to know what database column types should be for those types.\n         * Column types are driver dependant.\n         */\n        this.mappedDataTypes = {\n            createDate: \"datetime\",\n            createDateDefault: \"datetime('now')\",\n            updateDate: \"datetime\",\n            updateDateDefault: \"datetime('now')\",\n            version: \"integer\",\n            treeLevel: \"integer\",\n            migrationId: \"integer\",\n            migrationName: \"varchar\",\n            migrationTimestamp: \"bigint\",\n            cacheId: \"int\",\n            cacheIdentifier: \"varchar\",\n            cacheTime: \"bigint\",\n            cacheDuration: \"int\",\n            cacheQuery: \"text\",\n            cacheResult: \"text\",\n        };\n        this.connection = connection;\n        this.options = connection.options;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     */\n    AbstractSqliteDriver.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, this.createDatabaseConnection()];\n                    case 1:\n                        _a.databaseConnection = _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Makes any action after connection (e.g. create extensions in Postgres driver).\n     */\n    AbstractSqliteDriver.prototype.afterConnect = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Closes connection with database.\n     */\n    AbstractSqliteDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.queryRunner = undefined;\n                        _this.databaseConnection.close(function (err) { return err ? fail(err) : ok(); });\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a schema builder used to build and sync a schema.\n     */\n    AbstractSqliteDriver.prototype.createSchemaBuilder = function () {\n        return new RdbmsSchemaBuilder_1.RdbmsSchemaBuilder(this.connection);\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type and metadata.\n     */\n    AbstractSqliteDriver.prototype.preparePersistentValue = function (value, columnMetadata) {\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.to(value);\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean || columnMetadata.type === \"boolean\") {\n            return value === true ? 1 : 0;\n        }\n        else if (columnMetadata.type === \"date\") {\n            return DateUtils_1.DateUtils.mixedDateToDateString(value);\n        }\n        else if (columnMetadata.type === \"time\") {\n            return DateUtils_1.DateUtils.mixedDateToTimeString(value);\n        }\n        else if (columnMetadata.type === \"datetime\" || columnMetadata.type === Date) {\n            // to string conversation needs because SQLite stores date as integer number, when date came as Object\n            // TODO: think about `toUTC` conversion\n            return DateUtils_1.DateUtils.mixedDateToUtcDatetimeString(value);\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            return DateUtils_1.DateUtils.simpleArrayToString(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            return DateUtils_1.DateUtils.simpleJsonToString(value);\n        }\n        return value;\n    };\n    /**\n     * Prepares given value to a value to be hydrated, based on its column type or metadata.\n     */\n    AbstractSqliteDriver.prototype.prepareHydratedValue = function (value, columnMetadata) {\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean || columnMetadata.type === \"boolean\") {\n            value = value ? true : false;\n        }\n        else if (columnMetadata.type === \"datetime\" || columnMetadata.type === Date) {\n            /**\n             * Fix date conversion issue\n             *\n             * If the format of the date string is \"2018-03-14 02:33:33.906\", Safari (and iOS WKWebView) will convert it to an invalid date object.\n             * We need to modify the date string to \"2018-03-14T02:33:33.906Z\" and Safari will convert it correctly.\n             *\n             * ISO 8601\n             * https://www.w3.org/TR/NOTE-datetime\n             */\n            if (value && typeof value === \"string\") {\n                value = value.replace(\" \", \"T\") + \"Z\";\n            }\n            value = DateUtils_1.DateUtils.normalizeHydratedDate(value);\n        }\n        else if (columnMetadata.type === \"date\") {\n            value = DateUtils_1.DateUtils.mixedDateToDateString(value);\n        }\n        else if (columnMetadata.type === \"time\") {\n            value = DateUtils_1.DateUtils.mixedTimeToString(value);\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            value = DateUtils_1.DateUtils.stringToSimpleArray(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            value = DateUtils_1.DateUtils.stringToSimpleJson(value);\n        }\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.from(value);\n        return value;\n    };\n    /**\n     * Replaces parameters in the given sql with special escaping character\n     * and an array of parameter names to be passed to a query.\n     */\n    AbstractSqliteDriver.prototype.escapeQueryWithParameters = function (sql, parameters, nativeParameters) {\n        var builtParameters = Object.keys(nativeParameters).map(function (key) {\n            // Mapping boolean values to their numeric representation\n            if (typeof nativeParameters[key] === \"boolean\") {\n                return nativeParameters[key] === true ? 1 : 0;\n            }\n            return nativeParameters[key];\n        });\n        if (!parameters || !Object.keys(parameters).length)\n            return [sql, builtParameters];\n        var keys = Object.keys(parameters).map(function (parameter) { return \"(:(\\\\.\\\\.\\\\.)?\" + parameter + \"\\\\b)\"; }).join(\"|\");\n        sql = sql.replace(new RegExp(keys, \"g\"), function (key) {\n            var value;\n            var isArray = false;\n            if (key.substr(0, 4) === \":...\") {\n                isArray = true;\n                value = parameters[key.substr(4)];\n            }\n            else {\n                value = parameters[key.substr(1)];\n            }\n            if (isArray) {\n                return value.map(function (v) {\n                    builtParameters.push(v);\n                    return \"?\";\n                    // return \"$\" + builtParameters.length;\n                }).join(\", \");\n            }\n            else if (value instanceof Function) {\n                return value();\n            }\n            else {\n                builtParameters.push(value);\n                return \"?\";\n                // return \"$\" + builtParameters.length;\n            }\n        }); // todo: make replace only in value statements, otherwise problems\n        return [sql, builtParameters];\n    };\n    /**\n     * Escapes a column name.\n     */\n    AbstractSqliteDriver.prototype.escape = function (columnName) {\n        return \"\\\"\" + columnName + \"\\\"\";\n    };\n    /**\n     * Build full table name with database name, schema name and table name.\n     * E.g. \"myDB\".\"mySchema\".\"myTable\"\n     *\n     * Returns only simple table name because all inherited drivers does not supports schema and database.\n     */\n    AbstractSqliteDriver.prototype.buildTableName = function (tableName, schema, database) {\n        return tableName;\n    };\n    /**\n     * Creates a database type from a given column metadata.\n     */\n    AbstractSqliteDriver.prototype.normalizeType = function (column) {\n        if (column.type === Number || column.type === \"int\") {\n            return \"integer\";\n        }\n        else if (column.type === String) {\n            return \"varchar\";\n        }\n        else if (column.type === Date) {\n            return \"datetime\";\n        }\n        else if (column.type === Boolean) {\n            return \"boolean\";\n        }\n        else if (column.type === \"uuid\") {\n            return \"varchar\";\n        }\n        else if (column.type === \"simple-array\") {\n            return \"text\";\n        }\n        else if (column.type === \"simple-json\") {\n            return \"text\";\n        }\n        else {\n            return column.type || \"\";\n        }\n    };\n    /**\n     * Normalizes \"default\" value of the column.\n     */\n    AbstractSqliteDriver.prototype.normalizeDefault = function (columnMetadata) {\n        var defaultValue = columnMetadata.default;\n        if (typeof defaultValue === \"number\") {\n            return \"\" + defaultValue;\n        }\n        else if (typeof defaultValue === \"boolean\") {\n            return defaultValue === true ? \"1\" : \"0\";\n        }\n        else if (typeof defaultValue === \"function\") {\n            return defaultValue();\n        }\n        else if (typeof defaultValue === \"string\") {\n            return \"'\" + defaultValue + \"'\";\n        }\n        else {\n            return defaultValue;\n        }\n    };\n    /**\n     * Normalizes \"isUnique\" value of the column.\n     */\n    AbstractSqliteDriver.prototype.normalizeIsUnique = function (column) {\n        return column.entityMetadata.uniques.some(function (uq) { return uq.columns.length === 1 && uq.columns[0] === column; });\n    };\n    /**\n     * Calculates column length taking into account the default length values.\n     */\n    AbstractSqliteDriver.prototype.getColumnLength = function (column) {\n        return column.length ? column.length.toString() : \"\";\n    };\n    /**\n     * Normalizes \"default\" value of the column.\n     */\n    AbstractSqliteDriver.prototype.createFullType = function (column) {\n        var type = column.type;\n        if (column.length) {\n            type += \"(\" + column.length + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined && column.scale !== null && column.scale !== undefined) {\n            type += \"(\" + column.precision + \",\" + column.scale + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined) {\n            type += \"(\" + column.precision + \")\";\n        }\n        if (column.isArray)\n            type += \" array\";\n        return type;\n    };\n    /**\n     * Obtains a new database connection to a master server.\n     * Used for replication.\n     * If replication is not setup then returns default connection's database connection.\n     */\n    AbstractSqliteDriver.prototype.obtainMasterConnection = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Obtains a new database connection to a slave server.\n     * Used for replication.\n     * If replication is not setup then returns master (default) connection's database connection.\n     */\n    AbstractSqliteDriver.prototype.obtainSlaveConnection = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Creates generated map of values generated or returned by database after INSERT query.\n     */\n    AbstractSqliteDriver.prototype.createGeneratedMap = function (metadata, insertResult) {\n        var generatedMap = metadata.generatedColumns.reduce(function (map, generatedColumn) {\n            var value;\n            if (generatedColumn.generationStrategy === \"increment\" && insertResult) {\n                value = insertResult;\n                // } else if (generatedColumn.generationStrategy === \"uuid\") {\n                //     value = insertValue[generatedColumn.databaseName];\n            }\n            if (!value)\n                return map;\n            return OrmUtils_1.OrmUtils.mergeDeep(map, generatedColumn.createValueMap(value));\n        }, {});\n        return Object.keys(generatedMap).length > 0 ? generatedMap : undefined;\n    };\n    /**\n     * Differentiate columns of this table and columns from the given column metadatas columns\n     * and returns only changed.\n     */\n    AbstractSqliteDriver.prototype.findChangedColumns = function (tableColumns, columnMetadatas) {\n        var _this = this;\n        return columnMetadatas.filter(function (columnMetadata) {\n            var tableColumn = tableColumns.find(function (c) { return c.name === columnMetadata.databaseName; });\n            if (!tableColumn)\n                return false; // we don't need new columns, we only need exist and changed\n            // console.log(\"table:\", columnMetadata.entityMetadata.tableName);\n            // console.log(\"name:\", tableColumn.name, columnMetadata.databaseName);\n            // console.log(\"type:\", tableColumn.type, this.normalizeType(columnMetadata));\n            // console.log(\"length:\", tableColumn.length, columnMetadata.length);\n            // console.log(\"precision:\", tableColumn.precision, columnMetadata.precision);\n            // console.log(\"scale:\", tableColumn.scale, columnMetadata.scale);\n            // console.log(\"comment:\", tableColumn.comment, columnMetadata.comment);\n            // console.log(\"default:\", tableColumn.default, columnMetadata.default);\n            // console.log(\"isPrimary:\", tableColumn.isPrimary, columnMetadata.isPrimary);\n            // console.log(\"isNullable:\", tableColumn.isNullable, columnMetadata.isNullable);\n            // console.log(\"isUnique:\", tableColumn.isUnique, this.normalizeIsUnique(columnMetadata));\n            // console.log(\"isGenerated:\", tableColumn.isGenerated, columnMetadata.isGenerated);\n            // console.log(\"==========================================\");\n            return tableColumn.name !== columnMetadata.databaseName\n                || tableColumn.type !== _this.normalizeType(columnMetadata)\n                || tableColumn.length !== columnMetadata.length\n                || tableColumn.precision !== columnMetadata.precision\n                || tableColumn.scale !== columnMetadata.scale\n                //  || tableColumn.comment !== columnMetadata.comment || // todo\n                || _this.normalizeDefault(columnMetadata) !== tableColumn.default\n                || tableColumn.isPrimary !== columnMetadata.isPrimary\n                || tableColumn.isNullable !== columnMetadata.isNullable\n                || tableColumn.isUnique !== _this.normalizeIsUnique(columnMetadata)\n                || (columnMetadata.generationStrategy !== \"uuid\" && tableColumn.isGenerated !== columnMetadata.isGenerated);\n        });\n    };\n    /**\n     * Returns true if driver supports RETURNING / OUTPUT statement.\n     */\n    AbstractSqliteDriver.prototype.isReturningSqlSupported = function () {\n        return false;\n    };\n    /**\n     * Returns true if driver supports uuid values generation on its own.\n     */\n    AbstractSqliteDriver.prototype.isUUIDGenerationSupported = function () {\n        return false;\n    };\n    /**\n     * Creates an escaped parameter.\n     */\n    AbstractSqliteDriver.prototype.createParameter = function (parameterName, index) {\n        // return \"$\" + (index + 1);\n        return \"?\";\n        // return \"$\" + parameterName;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    AbstractSqliteDriver.prototype.createDatabaseConnection = function () {\n        throw new Error(\"Do not use AbstractSqlite directly, it has to be used with one of the sqlite drivers\");\n    };\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    AbstractSqliteDriver.prototype.loadDependencies = function () {\n        // dependencies have to be loaded in the specific driver\n    };\n    return AbstractSqliteDriver;\n}());\nexports.AbstractSqliteDriver = AbstractSqliteDriver;\n\n//# sourceMappingURL=AbstractSqliteDriver.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}}],"sources":{"../node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DateUtils_1 = require(\"../../util/DateUtils\");\nvar RdbmsSchemaBuilder_1 = require(\"../../schema-builder/RdbmsSchemaBuilder\");\nvar OrmUtils_1 = require(\"../../util/OrmUtils\");\n/**\n * Organizes communication with sqlite DBMS.\n */\nvar AbstractSqliteDriver = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function AbstractSqliteDriver(connection) {\n        /**\n         * Indicates if replication is enabled.\n         */\n        this.isReplicated = false;\n        /**\n         * Indicates if tree tables are supported by this driver.\n         */\n        this.treeSupport = true;\n        /**\n         * Gets list of supported column data types by a driver.\n         *\n         * @see https://www.tutorialspoint.com/sqlite/sqlite_data_types.htm\n         * @see https://sqlite.org/datatype3.html\n         */\n        this.supportedDataTypes = [\n            \"int\",\n            \"integer\",\n            \"tinyint\",\n            \"smallint\",\n            \"mediumint\",\n            \"bigint\",\n            \"unsigned big int\",\n            \"int2\",\n            \"int8\",\n            \"integer\",\n            \"character\",\n            \"varchar\",\n            \"varying character\",\n            \"nchar\",\n            \"native character\",\n            \"nvarchar\",\n            \"text\",\n            \"clob\",\n            \"text\",\n            \"blob\",\n            \"real\",\n            \"double\",\n            \"double precision\",\n            \"float\",\n            \"real\",\n            \"numeric\",\n            \"decimal\",\n            \"boolean\",\n            \"date\",\n            \"time\",\n            \"datetime\"\n        ];\n        /**\n         * Gets list of column data types that support length by a driver.\n         */\n        this.withLengthColumnTypes = [\n            \"character\",\n            \"varchar\",\n            \"varying character\",\n            \"nchar\",\n            \"native character\",\n            \"nvarchar\",\n            \"text\",\n            \"blob\",\n            \"clob\"\n        ];\n        /**\n         * Gets list of spatial column data types.\n         */\n        this.spatialTypes = [];\n        /**\n         * Gets list of column data types that support precision by a driver.\n         */\n        this.withPrecisionColumnTypes = [];\n        /**\n         * Gets list of column data types that support scale by a driver.\n         */\n        this.withScaleColumnTypes = [];\n        /**\n         * Orm has special columns and we need to know what database column types should be for those types.\n         * Column types are driver dependant.\n         */\n        this.mappedDataTypes = {\n            createDate: \"datetime\",\n            createDateDefault: \"datetime('now')\",\n            updateDate: \"datetime\",\n            updateDateDefault: \"datetime('now')\",\n            version: \"integer\",\n            treeLevel: \"integer\",\n            migrationId: \"integer\",\n            migrationName: \"varchar\",\n            migrationTimestamp: \"bigint\",\n            cacheId: \"int\",\n            cacheIdentifier: \"varchar\",\n            cacheTime: \"bigint\",\n            cacheDuration: \"int\",\n            cacheQuery: \"text\",\n            cacheResult: \"text\",\n        };\n        this.connection = connection;\n        this.options = connection.options;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     */\n    AbstractSqliteDriver.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, this.createDatabaseConnection()];\n                    case 1:\n                        _a.databaseConnection = _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Makes any action after connection (e.g. create extensions in Postgres driver).\n     */\n    AbstractSqliteDriver.prototype.afterConnect = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Closes connection with database.\n     */\n    AbstractSqliteDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.queryRunner = undefined;\n                        _this.databaseConnection.close(function (err) { return err ? fail(err) : ok(); });\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a schema builder used to build and sync a schema.\n     */\n    AbstractSqliteDriver.prototype.createSchemaBuilder = function () {\n        return new RdbmsSchemaBuilder_1.RdbmsSchemaBuilder(this.connection);\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type and metadata.\n     */\n    AbstractSqliteDriver.prototype.preparePersistentValue = function (value, columnMetadata) {\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.to(value);\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean || columnMetadata.type === \"boolean\") {\n            return value === true ? 1 : 0;\n        }\n        else if (columnMetadata.type === \"date\") {\n            return DateUtils_1.DateUtils.mixedDateToDateString(value);\n        }\n        else if (columnMetadata.type === \"time\") {\n            return DateUtils_1.DateUtils.mixedDateToTimeString(value);\n        }\n        else if (columnMetadata.type === \"datetime\" || columnMetadata.type === Date) {\n            // to string conversation needs because SQLite stores date as integer number, when date came as Object\n            // TODO: think about `toUTC` conversion\n            return DateUtils_1.DateUtils.mixedDateToUtcDatetimeString(value);\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            return DateUtils_1.DateUtils.simpleArrayToString(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            return DateUtils_1.DateUtils.simpleJsonToString(value);\n        }\n        return value;\n    };\n    /**\n     * Prepares given value to a value to be hydrated, based on its column type or metadata.\n     */\n    AbstractSqliteDriver.prototype.prepareHydratedValue = function (value, columnMetadata) {\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean || columnMetadata.type === \"boolean\") {\n            value = value ? true : false;\n        }\n        else if (columnMetadata.type === \"datetime\" || columnMetadata.type === Date) {\n            /**\n             * Fix date conversion issue\n             *\n             * If the format of the date string is \"2018-03-14 02:33:33.906\", Safari (and iOS WKWebView) will convert it to an invalid date object.\n             * We need to modify the date string to \"2018-03-14T02:33:33.906Z\" and Safari will convert it correctly.\n             *\n             * ISO 8601\n             * https://www.w3.org/TR/NOTE-datetime\n             */\n            if (value && typeof value === \"string\") {\n                value = value.replace(\" \", \"T\") + \"Z\";\n            }\n            value = DateUtils_1.DateUtils.normalizeHydratedDate(value);\n        }\n        else if (columnMetadata.type === \"date\") {\n            value = DateUtils_1.DateUtils.mixedDateToDateString(value);\n        }\n        else if (columnMetadata.type === \"time\") {\n            value = DateUtils_1.DateUtils.mixedTimeToString(value);\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            value = DateUtils_1.DateUtils.stringToSimpleArray(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            value = DateUtils_1.DateUtils.stringToSimpleJson(value);\n        }\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.from(value);\n        return value;\n    };\n    /**\n     * Replaces parameters in the given sql with special escaping character\n     * and an array of parameter names to be passed to a query.\n     */\n    AbstractSqliteDriver.prototype.escapeQueryWithParameters = function (sql, parameters, nativeParameters) {\n        var builtParameters = Object.keys(nativeParameters).map(function (key) {\n            // Mapping boolean values to their numeric representation\n            if (typeof nativeParameters[key] === \"boolean\") {\n                return nativeParameters[key] === true ? 1 : 0;\n            }\n            return nativeParameters[key];\n        });\n        if (!parameters || !Object.keys(parameters).length)\n            return [sql, builtParameters];\n        var keys = Object.keys(parameters).map(function (parameter) { return \"(:(\\\\.\\\\.\\\\.)?\" + parameter + \"\\\\b)\"; }).join(\"|\");\n        sql = sql.replace(new RegExp(keys, \"g\"), function (key) {\n            var value;\n            var isArray = false;\n            if (key.substr(0, 4) === \":...\") {\n                isArray = true;\n                value = parameters[key.substr(4)];\n            }\n            else {\n                value = parameters[key.substr(1)];\n            }\n            if (isArray) {\n                return value.map(function (v) {\n                    builtParameters.push(v);\n                    return \"?\";\n                    // return \"$\" + builtParameters.length;\n                }).join(\", \");\n            }\n            else if (value instanceof Function) {\n                return value();\n            }\n            else {\n                builtParameters.push(value);\n                return \"?\";\n                // return \"$\" + builtParameters.length;\n            }\n        }); // todo: make replace only in value statements, otherwise problems\n        return [sql, builtParameters];\n    };\n    /**\n     * Escapes a column name.\n     */\n    AbstractSqliteDriver.prototype.escape = function (columnName) {\n        return \"\\\"\" + columnName + \"\\\"\";\n    };\n    /**\n     * Build full table name with database name, schema name and table name.\n     * E.g. \"myDB\".\"mySchema\".\"myTable\"\n     *\n     * Returns only simple table name because all inherited drivers does not supports schema and database.\n     */\n    AbstractSqliteDriver.prototype.buildTableName = function (tableName, schema, database) {\n        return tableName;\n    };\n    /**\n     * Creates a database type from a given column metadata.\n     */\n    AbstractSqliteDriver.prototype.normalizeType = function (column) {\n        if (column.type === Number || column.type === \"int\") {\n            return \"integer\";\n        }\n        else if (column.type === String) {\n            return \"varchar\";\n        }\n        else if (column.type === Date) {\n            return \"datetime\";\n        }\n        else if (column.type === Boolean) {\n            return \"boolean\";\n        }\n        else if (column.type === \"uuid\") {\n            return \"varchar\";\n        }\n        else if (column.type === \"simple-array\") {\n            return \"text\";\n        }\n        else if (column.type === \"simple-json\") {\n            return \"text\";\n        }\n        else {\n            return column.type || \"\";\n        }\n    };\n    /**\n     * Normalizes \"default\" value of the column.\n     */\n    AbstractSqliteDriver.prototype.normalizeDefault = function (columnMetadata) {\n        var defaultValue = columnMetadata.default;\n        if (typeof defaultValue === \"number\") {\n            return \"\" + defaultValue;\n        }\n        else if (typeof defaultValue === \"boolean\") {\n            return defaultValue === true ? \"1\" : \"0\";\n        }\n        else if (typeof defaultValue === \"function\") {\n            return defaultValue();\n        }\n        else if (typeof defaultValue === \"string\") {\n            return \"'\" + defaultValue + \"'\";\n        }\n        else {\n            return defaultValue;\n        }\n    };\n    /**\n     * Normalizes \"isUnique\" value of the column.\n     */\n    AbstractSqliteDriver.prototype.normalizeIsUnique = function (column) {\n        return column.entityMetadata.uniques.some(function (uq) { return uq.columns.length === 1 && uq.columns[0] === column; });\n    };\n    /**\n     * Calculates column length taking into account the default length values.\n     */\n    AbstractSqliteDriver.prototype.getColumnLength = function (column) {\n        return column.length ? column.length.toString() : \"\";\n    };\n    /**\n     * Normalizes \"default\" value of the column.\n     */\n    AbstractSqliteDriver.prototype.createFullType = function (column) {\n        var type = column.type;\n        if (column.length) {\n            type += \"(\" + column.length + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined && column.scale !== null && column.scale !== undefined) {\n            type += \"(\" + column.precision + \",\" + column.scale + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined) {\n            type += \"(\" + column.precision + \")\";\n        }\n        if (column.isArray)\n            type += \" array\";\n        return type;\n    };\n    /**\n     * Obtains a new database connection to a master server.\n     * Used for replication.\n     * If replication is not setup then returns default connection's database connection.\n     */\n    AbstractSqliteDriver.prototype.obtainMasterConnection = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Obtains a new database connection to a slave server.\n     * Used for replication.\n     * If replication is not setup then returns master (default) connection's database connection.\n     */\n    AbstractSqliteDriver.prototype.obtainSlaveConnection = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Creates generated map of values generated or returned by database after INSERT query.\n     */\n    AbstractSqliteDriver.prototype.createGeneratedMap = function (metadata, insertResult) {\n        var generatedMap = metadata.generatedColumns.reduce(function (map, generatedColumn) {\n            var value;\n            if (generatedColumn.generationStrategy === \"increment\" && insertResult) {\n                value = insertResult;\n                // } else if (generatedColumn.generationStrategy === \"uuid\") {\n                //     value = insertValue[generatedColumn.databaseName];\n            }\n            if (!value)\n                return map;\n            return OrmUtils_1.OrmUtils.mergeDeep(map, generatedColumn.createValueMap(value));\n        }, {});\n        return Object.keys(generatedMap).length > 0 ? generatedMap : undefined;\n    };\n    /**\n     * Differentiate columns of this table and columns from the given column metadatas columns\n     * and returns only changed.\n     */\n    AbstractSqliteDriver.prototype.findChangedColumns = function (tableColumns, columnMetadatas) {\n        var _this = this;\n        return columnMetadatas.filter(function (columnMetadata) {\n            var tableColumn = tableColumns.find(function (c) { return c.name === columnMetadata.databaseName; });\n            if (!tableColumn)\n                return false; // we don't need new columns, we only need exist and changed\n            // console.log(\"table:\", columnMetadata.entityMetadata.tableName);\n            // console.log(\"name:\", tableColumn.name, columnMetadata.databaseName);\n            // console.log(\"type:\", tableColumn.type, this.normalizeType(columnMetadata));\n            // console.log(\"length:\", tableColumn.length, columnMetadata.length);\n            // console.log(\"precision:\", tableColumn.precision, columnMetadata.precision);\n            // console.log(\"scale:\", tableColumn.scale, columnMetadata.scale);\n            // console.log(\"comment:\", tableColumn.comment, columnMetadata.comment);\n            // console.log(\"default:\", tableColumn.default, columnMetadata.default);\n            // console.log(\"isPrimary:\", tableColumn.isPrimary, columnMetadata.isPrimary);\n            // console.log(\"isNullable:\", tableColumn.isNullable, columnMetadata.isNullable);\n            // console.log(\"isUnique:\", tableColumn.isUnique, this.normalizeIsUnique(columnMetadata));\n            // console.log(\"isGenerated:\", tableColumn.isGenerated, columnMetadata.isGenerated);\n            // console.log(\"==========================================\");\n            return tableColumn.name !== columnMetadata.databaseName\n                || tableColumn.type !== _this.normalizeType(columnMetadata)\n                || tableColumn.length !== columnMetadata.length\n                || tableColumn.precision !== columnMetadata.precision\n                || tableColumn.scale !== columnMetadata.scale\n                //  || tableColumn.comment !== columnMetadata.comment || // todo\n                || _this.normalizeDefault(columnMetadata) !== tableColumn.default\n                || tableColumn.isPrimary !== columnMetadata.isPrimary\n                || tableColumn.isNullable !== columnMetadata.isNullable\n                || tableColumn.isUnique !== _this.normalizeIsUnique(columnMetadata)\n                || (columnMetadata.generationStrategy !== \"uuid\" && tableColumn.isGenerated !== columnMetadata.isGenerated);\n        });\n    };\n    /**\n     * Returns true if driver supports RETURNING / OUTPUT statement.\n     */\n    AbstractSqliteDriver.prototype.isReturningSqlSupported = function () {\n        return false;\n    };\n    /**\n     * Returns true if driver supports uuid values generation on its own.\n     */\n    AbstractSqliteDriver.prototype.isUUIDGenerationSupported = function () {\n        return false;\n    };\n    /**\n     * Creates an escaped parameter.\n     */\n    AbstractSqliteDriver.prototype.createParameter = function (parameterName, index) {\n        // return \"$\" + (index + 1);\n        return \"?\";\n        // return \"$\" + parameterName;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    AbstractSqliteDriver.prototype.createDatabaseConnection = function () {\n        throw new Error(\"Do not use AbstractSqlite directly, it has to be used with one of the sqlite drivers\");\n    };\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    AbstractSqliteDriver.prototype.loadDependencies = function () {\n        // dependencies have to be loaded in the specific driver\n    };\n    return AbstractSqliteDriver;\n}());\nexports.AbstractSqliteDriver = AbstractSqliteDriver;\n\n//# sourceMappingURL=AbstractSqliteDriver.js.map\n"},"lineCount":510}},"hash":"e2baebf09ae608feae67f54c48e4b8dd","cacheData":{"env":{}}}