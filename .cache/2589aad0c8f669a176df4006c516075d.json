{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000},{"name":"../platform/PlatformTools","loc":{"line":3,"column":30}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PlatformTools_1 = require(\"../platform/PlatformTools\");\n/**\n * Performs logging of the events in TypeORM.\n * This version of logger logs everything into ormlogs.log file.\n */\nvar FileLogger = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function FileLogger(options) {\n        this.options = options;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Logs query and parameters used in it.\n     */\n    FileLogger.prototype.logQuery = function (query, parameters, queryRunner) {\n        if (this.options === \"all\" || this.options === true || (this.options instanceof Array && this.options.indexOf(\"query\") !== -1)) {\n            var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n            this.write(\"[QUERY]: \" + sql);\n        }\n    };\n    /**\n     * Logs query that is failed.\n     */\n    FileLogger.prototype.logQueryError = function (error, query, parameters, queryRunner) {\n        if (this.options === \"all\" || this.options === true || (this.options instanceof Array && this.options.indexOf(\"error\") !== -1)) {\n            var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n            this.write([\n                \"[FAILED QUERY]: \" + sql,\n                \"[QUERY ERROR]: \" + error\n            ]);\n        }\n    };\n    /**\n     * Logs query that is slow.\n     */\n    FileLogger.prototype.logQuerySlow = function (time, query, parameters, queryRunner) {\n        var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n        this.write(\"[SLOW QUERY: \" + time + \" ms]: \" + sql);\n    };\n    /**\n     * Logs events from the schema build process.\n     */\n    FileLogger.prototype.logSchemaBuild = function (message, queryRunner) {\n        if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"schema\") !== -1)) {\n            this.write(message);\n        }\n    };\n    /**\n     * Logs events from the migrations run process.\n     */\n    FileLogger.prototype.logMigration = function (message, queryRunner) {\n        this.write(message);\n    };\n    /**\n     * Perform logging using given logger, or by default to the console.\n     * Log has its own level and message.\n     */\n    FileLogger.prototype.log = function (level, message, queryRunner) {\n        switch (level) {\n            case \"log\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"log\") !== -1))\n                    this.write(\"[LOG]: \" + message);\n                break;\n            case \"info\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"info\") !== -1))\n                    this.write(\"[INFO]: \" + message);\n                break;\n            case \"warn\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"warn\") !== -1))\n                    this.write(\"[WARN]: \" + message);\n                break;\n        }\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Writes given strings into the log file.\n     */\n    FileLogger.prototype.write = function (strings) {\n        strings = strings instanceof Array ? strings : [strings];\n        var basePath = PlatformTools_1.PlatformTools.load(\"app-root-path\").path;\n        strings = strings.map(function (str) { return \"[\" + new Date().toISOString() + \"]\" + str; });\n        PlatformTools_1.PlatformTools.appendFileSync(basePath + \"/ormlogs.log\", strings.join(\"\\r\\n\") + \"\\r\\n\"); // todo: use async or implement promises?\n    };\n    /**\n     * Converts parameters to a string.\n     * Sometimes parameters can have circular objects and therefor we are handle this case too.\n     */\n    FileLogger.prototype.stringifyParams = function (parameters) {\n        try {\n            return JSON.stringify(parameters);\n        }\n        catch (error) { // most probably circular objects in parameters\n            return parameters;\n        }\n    };\n    return FileLogger;\n}());\nexports.FileLogger = FileLogger;\n\n//# sourceMappingURL=FileLogger.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/typeorm/logger/FileLogger.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}}],"sources":{"../node_modules/typeorm/logger/FileLogger.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PlatformTools_1 = require(\"../platform/PlatformTools\");\n/**\n * Performs logging of the events in TypeORM.\n * This version of logger logs everything into ormlogs.log file.\n */\nvar FileLogger = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function FileLogger(options) {\n        this.options = options;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Logs query and parameters used in it.\n     */\n    FileLogger.prototype.logQuery = function (query, parameters, queryRunner) {\n        if (this.options === \"all\" || this.options === true || (this.options instanceof Array && this.options.indexOf(\"query\") !== -1)) {\n            var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n            this.write(\"[QUERY]: \" + sql);\n        }\n    };\n    /**\n     * Logs query that is failed.\n     */\n    FileLogger.prototype.logQueryError = function (error, query, parameters, queryRunner) {\n        if (this.options === \"all\" || this.options === true || (this.options instanceof Array && this.options.indexOf(\"error\") !== -1)) {\n            var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n            this.write([\n                \"[FAILED QUERY]: \" + sql,\n                \"[QUERY ERROR]: \" + error\n            ]);\n        }\n    };\n    /**\n     * Logs query that is slow.\n     */\n    FileLogger.prototype.logQuerySlow = function (time, query, parameters, queryRunner) {\n        var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n        this.write(\"[SLOW QUERY: \" + time + \" ms]: \" + sql);\n    };\n    /**\n     * Logs events from the schema build process.\n     */\n    FileLogger.prototype.logSchemaBuild = function (message, queryRunner) {\n        if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"schema\") !== -1)) {\n            this.write(message);\n        }\n    };\n    /**\n     * Logs events from the migrations run process.\n     */\n    FileLogger.prototype.logMigration = function (message, queryRunner) {\n        this.write(message);\n    };\n    /**\n     * Perform logging using given logger, or by default to the console.\n     * Log has its own level and message.\n     */\n    FileLogger.prototype.log = function (level, message, queryRunner) {\n        switch (level) {\n            case \"log\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"log\") !== -1))\n                    this.write(\"[LOG]: \" + message);\n                break;\n            case \"info\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"info\") !== -1))\n                    this.write(\"[INFO]: \" + message);\n                break;\n            case \"warn\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"warn\") !== -1))\n                    this.write(\"[WARN]: \" + message);\n                break;\n        }\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Writes given strings into the log file.\n     */\n    FileLogger.prototype.write = function (strings) {\n        strings = strings instanceof Array ? strings : [strings];\n        var basePath = PlatformTools_1.PlatformTools.load(\"app-root-path\").path;\n        strings = strings.map(function (str) { return \"[\" + new Date().toISOString() + \"]\" + str; });\n        PlatformTools_1.PlatformTools.appendFileSync(basePath + \"/ormlogs.log\", strings.join(\"\\r\\n\") + \"\\r\\n\"); // todo: use async or implement promises?\n    };\n    /**\n     * Converts parameters to a string.\n     * Sometimes parameters can have circular objects and therefor we are handle this case too.\n     */\n    FileLogger.prototype.stringifyParams = function (parameters) {\n        try {\n            return JSON.stringify(parameters);\n        }\n        catch (error) { // most probably circular objects in parameters\n            return parameters;\n        }\n    };\n    return FileLogger;\n}());\nexports.FileLogger = FileLogger;\n\n//# sourceMappingURL=FileLogger.js.map\n"},"lineCount":109}},"hash":"a8eb7684786c8bf556851a5f5905fd75","cacheData":{"env":{}}}