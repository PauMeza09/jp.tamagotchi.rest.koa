{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Find Operator used in Find Conditions.\n */\nvar FindOperator = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function FindOperator(type, value, useParameter, multipleParameters) {\n        if (useParameter === void 0) { useParameter = true; }\n        if (multipleParameters === void 0) { multipleParameters = false; }\n        this._type = type;\n        this._value = value;\n        this._useParameter = useParameter;\n        this._multipleParameters = multipleParameters;\n    }\n    Object.defineProperty(FindOperator.prototype, \"useParameter\", {\n        // -------------------------------------------------------------------------\n        // Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Indicates if parameter is used or not for this operator.\n         * Extracts final value if value is another find operator.\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value.useParameter;\n            return this._useParameter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FindOperator.prototype, \"multipleParameters\", {\n        /**\n         * Indicates if multiple parameters must be used for this operator.\n         * Extracts final value if value is another find operator.\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value.multipleParameters;\n            return this._multipleParameters;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FindOperator.prototype, \"value\", {\n        /**\n         * Gets the final value needs to be used as parameter value.\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value.value;\n            return this._value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets SQL needs to be inserted into final query.\n     */\n    FindOperator.prototype.toSql = function (connection, aliasPath, parameters) {\n        switch (this._type) {\n            case \"not\":\n                if (this._value instanceof FindOperator) {\n                    return \"NOT(\" + this._value.toSql(connection, aliasPath, parameters) + \")\";\n                }\n                else {\n                    return aliasPath + \" != \" + parameters[0];\n                }\n            case \"lessThan\":\n                return aliasPath + \" < \" + parameters[0];\n            case \"moreThan\":\n                return aliasPath + \" > \" + parameters[0];\n            case \"equal\":\n                return aliasPath + \" = \" + parameters[0];\n            case \"like\":\n                return aliasPath + \" LIKE \" + parameters[0];\n            case \"between\":\n                return aliasPath + \" BETWEEN \" + parameters[0] + \" AND \" + parameters[1];\n            case \"in\":\n                return aliasPath + \" IN (\" + parameters.join(\", \") + \")\";\n            case \"any\":\n                return aliasPath + \" = ANY(\" + parameters[0] + \")\";\n            case \"isNull\":\n                return aliasPath + \" IS NULL\";\n            case \"raw\":\n                if (this.value instanceof Function) {\n                    return this.value(aliasPath);\n                }\n                else {\n                    return aliasPath + \" = \" + this.value;\n                }\n        }\n        return \"\";\n    };\n    return FindOperator;\n}());\nexports.FindOperator = FindOperator;\n\n//# sourceMappingURL=FindOperator.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/typeorm/find-options/FindOperator.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}}],"sources":{"../node_modules/typeorm/find-options/FindOperator.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Find Operator used in Find Conditions.\n */\nvar FindOperator = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function FindOperator(type, value, useParameter, multipleParameters) {\n        if (useParameter === void 0) { useParameter = true; }\n        if (multipleParameters === void 0) { multipleParameters = false; }\n        this._type = type;\n        this._value = value;\n        this._useParameter = useParameter;\n        this._multipleParameters = multipleParameters;\n    }\n    Object.defineProperty(FindOperator.prototype, \"useParameter\", {\n        // -------------------------------------------------------------------------\n        // Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Indicates if parameter is used or not for this operator.\n         * Extracts final value if value is another find operator.\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value.useParameter;\n            return this._useParameter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FindOperator.prototype, \"multipleParameters\", {\n        /**\n         * Indicates if multiple parameters must be used for this operator.\n         * Extracts final value if value is another find operator.\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value.multipleParameters;\n            return this._multipleParameters;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FindOperator.prototype, \"value\", {\n        /**\n         * Gets the final value needs to be used as parameter value.\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value.value;\n            return this._value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets SQL needs to be inserted into final query.\n     */\n    FindOperator.prototype.toSql = function (connection, aliasPath, parameters) {\n        switch (this._type) {\n            case \"not\":\n                if (this._value instanceof FindOperator) {\n                    return \"NOT(\" + this._value.toSql(connection, aliasPath, parameters) + \")\";\n                }\n                else {\n                    return aliasPath + \" != \" + parameters[0];\n                }\n            case \"lessThan\":\n                return aliasPath + \" < \" + parameters[0];\n            case \"moreThan\":\n                return aliasPath + \" > \" + parameters[0];\n            case \"equal\":\n                return aliasPath + \" = \" + parameters[0];\n            case \"like\":\n                return aliasPath + \" LIKE \" + parameters[0];\n            case \"between\":\n                return aliasPath + \" BETWEEN \" + parameters[0] + \" AND \" + parameters[1];\n            case \"in\":\n                return aliasPath + \" IN (\" + parameters.join(\", \") + \")\";\n            case \"any\":\n                return aliasPath + \" = ANY(\" + parameters[0] + \")\";\n            case \"isNull\":\n                return aliasPath + \" IS NULL\";\n            case \"raw\":\n                if (this.value instanceof Function) {\n                    return this.value(aliasPath);\n                }\n                else {\n                    return aliasPath + \" = \" + this.value;\n                }\n        }\n        return \"\";\n    };\n    return FindOperator;\n}());\nexports.FindOperator = FindOperator;\n\n//# sourceMappingURL=FindOperator.js.map\n"},"lineCount":105}},"hash":"cf730c215b404a2699b76b867c66644c","cacheData":{"env":{}}}