{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000},{"name":"./SimpleConsoleLogger","loc":{"line":3,"column":36}},{"name":"./AdvancedConsoleLogger","loc":{"line":4,"column":38}},{"name":"./FileLogger","loc":{"line":5,"column":27}},{"name":"./DebugLogger","loc":{"line":6,"column":28}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SimpleConsoleLogger_1 = require(\"./SimpleConsoleLogger\");\nvar AdvancedConsoleLogger_1 = require(\"./AdvancedConsoleLogger\");\nvar FileLogger_1 = require(\"./FileLogger\");\nvar DebugLogger_1 = require(\"./DebugLogger\");\n/**\n * Helps to create logger instances.\n */\nvar LoggerFactory = /** @class */ (function () {\n    function LoggerFactory() {\n    }\n    /**\n     * Creates a new logger depend on a given connection's driver.\n     */\n    LoggerFactory.prototype.create = function (logger, options) {\n        if (logger instanceof Object)\n            return logger;\n        if (logger) {\n            switch (logger) {\n                case \"simple-console\":\n                    return new SimpleConsoleLogger_1.SimpleConsoleLogger(options);\n                case \"file\":\n                    return new FileLogger_1.FileLogger(options);\n                case \"advanced-console\":\n                    return new AdvancedConsoleLogger_1.AdvancedConsoleLogger(options);\n                case \"debug\":\n                    return new DebugLogger_1.DebugLogger();\n            }\n        }\n        return new AdvancedConsoleLogger_1.AdvancedConsoleLogger(options);\n    };\n    return LoggerFactory;\n}());\nexports.LoggerFactory = LoggerFactory;\n\n//# sourceMappingURL=LoggerFactory.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typeorm/logger/LoggerFactory.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}}],"sources":{"../node_modules/typeorm/logger/LoggerFactory.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SimpleConsoleLogger_1 = require(\"./SimpleConsoleLogger\");\nvar AdvancedConsoleLogger_1 = require(\"./AdvancedConsoleLogger\");\nvar FileLogger_1 = require(\"./FileLogger\");\nvar DebugLogger_1 = require(\"./DebugLogger\");\n/**\n * Helps to create logger instances.\n */\nvar LoggerFactory = /** @class */ (function () {\n    function LoggerFactory() {\n    }\n    /**\n     * Creates a new logger depend on a given connection's driver.\n     */\n    LoggerFactory.prototype.create = function (logger, options) {\n        if (logger instanceof Object)\n            return logger;\n        if (logger) {\n            switch (logger) {\n                case \"simple-console\":\n                    return new SimpleConsoleLogger_1.SimpleConsoleLogger(options);\n                case \"file\":\n                    return new FileLogger_1.FileLogger(options);\n                case \"advanced-console\":\n                    return new AdvancedConsoleLogger_1.AdvancedConsoleLogger(options);\n                case \"debug\":\n                    return new DebugLogger_1.DebugLogger();\n            }\n        }\n        return new AdvancedConsoleLogger_1.AdvancedConsoleLogger(options);\n    };\n    return LoggerFactory;\n}());\nexports.LoggerFactory = LoggerFactory;\n\n//# sourceMappingURL=LoggerFactory.js.map\n"},"lineCount":38}},"hash":"a99daa6badc13980619cfb5188587d04","cacheData":{"env":{}}}