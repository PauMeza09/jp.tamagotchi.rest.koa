{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000},{"name":"../schema-builder/table/Table","loc":{"line":38,"column":22}},{"name":"../driver/sqlserver/SqlServerDriver","loc":{"line":39,"column":32}},{"name":"../driver/sqlserver/MssqlParameter","loc":{"line":40,"column":31}},{"name":"../driver/oracle/OracleDriver","loc":{"line":41,"column":29}}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Table_1 = require(\"../schema-builder/table/Table\");\nvar SqlServerDriver_1 = require(\"../driver/sqlserver/SqlServerDriver\");\nvar MssqlParameter_1 = require(\"../driver/sqlserver/MssqlParameter\");\nvar OracleDriver_1 = require(\"../driver/oracle/OracleDriver\");\n/**\n * Caches query result into current database, into separate table called \"query-result-cache\".\n */\nvar DbQueryResultCache = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function DbQueryResultCache(connection) {\n        this.connection = connection;\n        var options = this.connection.driver.options;\n        this.queryResultCacheTable = this.connection.driver.buildTableName(\"query-result-cache\", options.schema, options.database);\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a connection with given cache provider.\n     */\n    DbQueryResultCache.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Disconnects with given cache provider.\n     */\n    DbQueryResultCache.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Creates table for storing cache if it does not exist yet.\n     */\n    DbQueryResultCache.prototype.synchronize = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var driver, tableExist;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.getQueryRunner(queryRunner);\n                        driver = this.connection.driver;\n                        return [4 /*yield*/, queryRunner.hasTable(this.queryResultCacheTable)];\n                    case 1:\n                        tableExist = _a.sent();\n                        if (tableExist)\n                            return [2 /*return*/];\n                        return [4 /*yield*/, queryRunner.createTable(new Table_1.Table({\n                                name: this.queryResultCacheTable,\n                                columns: [\n                                    {\n                                        name: \"id\",\n                                        isPrimary: true,\n                                        isNullable: false,\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheId }),\n                                        generationStrategy: \"increment\",\n                                        isGenerated: true\n                                    },\n                                    {\n                                        name: \"identifier\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheIdentifier }),\n                                        isNullable: true\n                                    },\n                                    {\n                                        name: \"time\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheTime }),\n                                        isPrimary: false,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"duration\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheDuration }),\n                                        isPrimary: false,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"query\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheQuery }),\n                                        isPrimary: false,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"result\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheResult }),\n                                        isNullable: false\n                                    },\n                                ]\n                            }))];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Caches given query result.\n     * Returns cache result if found.\n     * Returns undefined if result is not cached.\n     */\n    DbQueryResultCache.prototype.getFromCache = function (options, queryRunner) {\n        queryRunner = this.getQueryRunner(queryRunner);\n        var qb = this.connection\n            .createQueryBuilder(queryRunner)\n            .select()\n            .from(this.queryResultCacheTable, \"cache\");\n        if (options.identifier) {\n            return qb\n                .where(qb.escape(\"cache\") + \".\" + qb.escape(\"identifier\") + \" = :identifier\")\n                .setParameters({ identifier: this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver ? new MssqlParameter_1.MssqlParameter(options.identifier, \"nvarchar\") : options.identifier })\n                .getRawOne();\n        }\n        else if (options.query) {\n            if (this.connection.driver instanceof OracleDriver_1.OracleDriver) {\n                return qb\n                    .where(\"dbms_lob.compare(\" + qb.escape(\"cache\") + \".\" + qb.escape(\"query\") + \", :query) = 0\", { query: options.query })\n                    .getRawOne();\n            }\n            return qb\n                .where(qb.escape(\"cache\") + \".\" + qb.escape(\"query\") + \" = :query\")\n                .setParameters({ query: this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver ? new MssqlParameter_1.MssqlParameter(options.query, \"nvarchar\") : options.query })\n                .getRawOne();\n        }\n        return Promise.resolve(undefined);\n    };\n    /**\n     * Checks if cache is expired or not.\n     */\n    DbQueryResultCache.prototype.isExpired = function (savedCache) {\n        return ((typeof savedCache.time === \"string\" ? parseInt(savedCache.time) : savedCache.time) + savedCache.duration) < new Date().getTime();\n    };\n    /**\n     * Stores given query result in the cache.\n     */\n    DbQueryResultCache.prototype.storeInCache = function (options, savedCache, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var insertedValues, qb, qb;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.getQueryRunner(queryRunner);\n                        insertedValues = options;\n                        if (this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver) { // todo: bad abstraction, re-implement this part, probably better if we create an entity metadata for cache table\n                            insertedValues = {\n                                identifier: new MssqlParameter_1.MssqlParameter(options.identifier, \"nvarchar\"),\n                                time: new MssqlParameter_1.MssqlParameter(options.time, \"bigint\"),\n                                duration: new MssqlParameter_1.MssqlParameter(options.duration, \"int\"),\n                                query: new MssqlParameter_1.MssqlParameter(options.query, \"nvarchar\"),\n                                result: new MssqlParameter_1.MssqlParameter(options.result, \"nvarchar\"),\n                            };\n                        }\n                        if (!(savedCache && savedCache.identifier)) return [3 /*break*/, 2];\n                        qb = queryRunner.manager\n                            .createQueryBuilder()\n                            .update(this.queryResultCacheTable)\n                            .set(insertedValues);\n                        qb.where(qb.escape(\"identifier\") + \" = :condition\", { condition: insertedValues.identifier });\n                        return [4 /*yield*/, qb.execute()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 2:\n                        if (!(savedCache && savedCache.query)) return [3 /*break*/, 4];\n                        qb = queryRunner.manager\n                            .createQueryBuilder()\n                            .update(this.queryResultCacheTable)\n                            .set(insertedValues);\n                        if (this.connection.driver instanceof OracleDriver_1.OracleDriver) {\n                            qb.where(\"dbms_lob.compare(\\\"query\\\", :condition) = 0\", { condition: insertedValues.query });\n                        }\n                        else {\n                            qb.where(qb.escape(\"query\") + \" = :condition\", { condition: insertedValues.query });\n                        }\n                        return [4 /*yield*/, qb.execute()];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 4: // otherwise insert\n                    return [4 /*yield*/, queryRunner.manager\n                            .createQueryBuilder()\n                            .insert()\n                            .into(this.queryResultCacheTable)\n                            .values(insertedValues)\n                            .execute()];\n                    case 5:\n                        _a.sent();\n                        _a.label = 6;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears everything stored in the cache.\n     */\n    DbQueryResultCache.prototype.clear = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.getQueryRunner(queryRunner).clearTable(this.queryResultCacheTable)];\n            });\n        });\n    };\n    /**\n     * Removes all cached results by given identifiers from cache.\n     */\n    DbQueryResultCache.prototype.remove = function (identifiers, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(identifiers.map(function (identifier) {\n                            var qb = _this.getQueryRunner(queryRunner).manager.createQueryBuilder();\n                            return qb.delete()\n                                .from(_this.queryResultCacheTable)\n                                .where(qb.escape(\"identifier\") + \" = :identifier\", { identifier: identifier })\n                                .execute();\n                        }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets a query runner to work with.\n     */\n    DbQueryResultCache.prototype.getQueryRunner = function (queryRunner) {\n        if (queryRunner)\n            return queryRunner;\n        return this.connection.createQueryRunner(\"master\");\n    };\n    return DbQueryResultCache;\n}());\nexports.DbQueryResultCache = DbQueryResultCache;\n\n//# sourceMappingURL=DbQueryResultCache.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/typeorm/cache/DbQueryResultCache.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}}],"sources":{"../node_modules/typeorm/cache/DbQueryResultCache.js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Table_1 = require(\"../schema-builder/table/Table\");\nvar SqlServerDriver_1 = require(\"../driver/sqlserver/SqlServerDriver\");\nvar MssqlParameter_1 = require(\"../driver/sqlserver/MssqlParameter\");\nvar OracleDriver_1 = require(\"../driver/oracle/OracleDriver\");\n/**\n * Caches query result into current database, into separate table called \"query-result-cache\".\n */\nvar DbQueryResultCache = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function DbQueryResultCache(connection) {\n        this.connection = connection;\n        var options = this.connection.driver.options;\n        this.queryResultCacheTable = this.connection.driver.buildTableName(\"query-result-cache\", options.schema, options.database);\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a connection with given cache provider.\n     */\n    DbQueryResultCache.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Disconnects with given cache provider.\n     */\n    DbQueryResultCache.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Creates table for storing cache if it does not exist yet.\n     */\n    DbQueryResultCache.prototype.synchronize = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var driver, tableExist;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.getQueryRunner(queryRunner);\n                        driver = this.connection.driver;\n                        return [4 /*yield*/, queryRunner.hasTable(this.queryResultCacheTable)];\n                    case 1:\n                        tableExist = _a.sent();\n                        if (tableExist)\n                            return [2 /*return*/];\n                        return [4 /*yield*/, queryRunner.createTable(new Table_1.Table({\n                                name: this.queryResultCacheTable,\n                                columns: [\n                                    {\n                                        name: \"id\",\n                                        isPrimary: true,\n                                        isNullable: false,\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheId }),\n                                        generationStrategy: \"increment\",\n                                        isGenerated: true\n                                    },\n                                    {\n                                        name: \"identifier\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheIdentifier }),\n                                        isNullable: true\n                                    },\n                                    {\n                                        name: \"time\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheTime }),\n                                        isPrimary: false,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"duration\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheDuration }),\n                                        isPrimary: false,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"query\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheQuery }),\n                                        isPrimary: false,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"result\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheResult }),\n                                        isNullable: false\n                                    },\n                                ]\n                            }))];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Caches given query result.\n     * Returns cache result if found.\n     * Returns undefined if result is not cached.\n     */\n    DbQueryResultCache.prototype.getFromCache = function (options, queryRunner) {\n        queryRunner = this.getQueryRunner(queryRunner);\n        var qb = this.connection\n            .createQueryBuilder(queryRunner)\n            .select()\n            .from(this.queryResultCacheTable, \"cache\");\n        if (options.identifier) {\n            return qb\n                .where(qb.escape(\"cache\") + \".\" + qb.escape(\"identifier\") + \" = :identifier\")\n                .setParameters({ identifier: this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver ? new MssqlParameter_1.MssqlParameter(options.identifier, \"nvarchar\") : options.identifier })\n                .getRawOne();\n        }\n        else if (options.query) {\n            if (this.connection.driver instanceof OracleDriver_1.OracleDriver) {\n                return qb\n                    .where(\"dbms_lob.compare(\" + qb.escape(\"cache\") + \".\" + qb.escape(\"query\") + \", :query) = 0\", { query: options.query })\n                    .getRawOne();\n            }\n            return qb\n                .where(qb.escape(\"cache\") + \".\" + qb.escape(\"query\") + \" = :query\")\n                .setParameters({ query: this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver ? new MssqlParameter_1.MssqlParameter(options.query, \"nvarchar\") : options.query })\n                .getRawOne();\n        }\n        return Promise.resolve(undefined);\n    };\n    /**\n     * Checks if cache is expired or not.\n     */\n    DbQueryResultCache.prototype.isExpired = function (savedCache) {\n        return ((typeof savedCache.time === \"string\" ? parseInt(savedCache.time) : savedCache.time) + savedCache.duration) < new Date().getTime();\n    };\n    /**\n     * Stores given query result in the cache.\n     */\n    DbQueryResultCache.prototype.storeInCache = function (options, savedCache, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var insertedValues, qb, qb;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.getQueryRunner(queryRunner);\n                        insertedValues = options;\n                        if (this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver) { // todo: bad abstraction, re-implement this part, probably better if we create an entity metadata for cache table\n                            insertedValues = {\n                                identifier: new MssqlParameter_1.MssqlParameter(options.identifier, \"nvarchar\"),\n                                time: new MssqlParameter_1.MssqlParameter(options.time, \"bigint\"),\n                                duration: new MssqlParameter_1.MssqlParameter(options.duration, \"int\"),\n                                query: new MssqlParameter_1.MssqlParameter(options.query, \"nvarchar\"),\n                                result: new MssqlParameter_1.MssqlParameter(options.result, \"nvarchar\"),\n                            };\n                        }\n                        if (!(savedCache && savedCache.identifier)) return [3 /*break*/, 2];\n                        qb = queryRunner.manager\n                            .createQueryBuilder()\n                            .update(this.queryResultCacheTable)\n                            .set(insertedValues);\n                        qb.where(qb.escape(\"identifier\") + \" = :condition\", { condition: insertedValues.identifier });\n                        return [4 /*yield*/, qb.execute()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 2:\n                        if (!(savedCache && savedCache.query)) return [3 /*break*/, 4];\n                        qb = queryRunner.manager\n                            .createQueryBuilder()\n                            .update(this.queryResultCacheTable)\n                            .set(insertedValues);\n                        if (this.connection.driver instanceof OracleDriver_1.OracleDriver) {\n                            qb.where(\"dbms_lob.compare(\\\"query\\\", :condition) = 0\", { condition: insertedValues.query });\n                        }\n                        else {\n                            qb.where(qb.escape(\"query\") + \" = :condition\", { condition: insertedValues.query });\n                        }\n                        return [4 /*yield*/, qb.execute()];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 4: // otherwise insert\n                    return [4 /*yield*/, queryRunner.manager\n                            .createQueryBuilder()\n                            .insert()\n                            .into(this.queryResultCacheTable)\n                            .values(insertedValues)\n                            .execute()];\n                    case 5:\n                        _a.sent();\n                        _a.label = 6;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears everything stored in the cache.\n     */\n    DbQueryResultCache.prototype.clear = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.getQueryRunner(queryRunner).clearTable(this.queryResultCacheTable)];\n            });\n        });\n    };\n    /**\n     * Removes all cached results by given identifiers from cache.\n     */\n    DbQueryResultCache.prototype.remove = function (identifiers, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(identifiers.map(function (identifier) {\n                            var qb = _this.getQueryRunner(queryRunner).manager.createQueryBuilder();\n                            return qb.delete()\n                                .from(_this.queryResultCacheTable)\n                                .where(qb.escape(\"identifier\") + \" = :identifier\", { identifier: identifier })\n                                .execute();\n                        }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets a query runner to work with.\n     */\n    DbQueryResultCache.prototype.getQueryRunner = function (queryRunner) {\n        if (queryRunner)\n            return queryRunner;\n        return this.connection.createQueryRunner(\"master\");\n    };\n    return DbQueryResultCache;\n}());\nexports.DbQueryResultCache = DbQueryResultCache;\n\n//# sourceMappingURL=DbQueryResultCache.js.map\n"},"lineCount":286}},"hash":"135418b859ceeceaaf53f5c2c58352af","cacheData":{"env":{}}}