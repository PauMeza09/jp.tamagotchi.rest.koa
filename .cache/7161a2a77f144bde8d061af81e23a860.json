{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000},{"name":"../metadata-builder/MetadataUtils","loc":{"line":3,"column":30}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MetadataUtils_1 = require(\"../metadata-builder/MetadataUtils\");\n/**\n * Storage all metadatas args of all available types: tables, columns, subscribers, relations, etc.\n * Each metadata args represents some specifications of what it represents.\n * MetadataArgs used to create a real Metadata objects.\n */\nvar MetadataArgsStorage = /** @class */ (function () {\n    function MetadataArgsStorage() {\n        // -------------------------------------------------------------------------\n        // Properties\n        // -------------------------------------------------------------------------\n        this.tables = [];\n        this.trees = [];\n        this.entityRepositories = [];\n        this.transactionEntityManagers = [];\n        this.transactionRepositories = [];\n        this.namingStrategies = [];\n        this.entitySubscribers = [];\n        this.indices = [];\n        this.uniques = [];\n        this.checks = [];\n        this.columns = [];\n        this.generations = [];\n        this.relations = [];\n        this.joinColumns = [];\n        this.joinTables = [];\n        this.entityListeners = [];\n        this.relationCounts = [];\n        this.relationIds = [];\n        this.embeddeds = [];\n        this.inheritances = [];\n        this.discriminatorValues = [];\n    }\n    MetadataArgsStorage.prototype.filterTables = function (target) {\n        return this.filterByTarget(this.tables, target);\n    };\n    MetadataArgsStorage.prototype.filterColumns = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.columns, target);\n    };\n    MetadataArgsStorage.prototype.findGenerated = function (target, propertyName) {\n        return this.generations.find(function (generated) {\n            return (target instanceof Array ? target.indexOf(generated.target) !== -1 : generated.target === target) && generated.propertyName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.findTree = function (target) {\n        return this.trees.find(function (tree) {\n            return (target instanceof Array ? target.indexOf(tree.target) !== -1 : tree.target === target);\n        });\n    };\n    MetadataArgsStorage.prototype.filterRelations = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.relations, target);\n    };\n    MetadataArgsStorage.prototype.filterRelationIds = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.relationIds, target);\n    };\n    MetadataArgsStorage.prototype.filterRelationCounts = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.relationCounts, target);\n    };\n    MetadataArgsStorage.prototype.filterIndices = function (target) {\n        // todo: implement parent-entity overrides?\n        return this.indices.filter(function (index) {\n            return target instanceof Array ? target.indexOf(index.target) !== -1 : index.target === target;\n        });\n    };\n    MetadataArgsStorage.prototype.filterUniques = function (target) {\n        return this.uniques.filter(function (unique) {\n            return target instanceof Array ? target.indexOf(unique.target) !== -1 : unique.target === target;\n        });\n    };\n    MetadataArgsStorage.prototype.filterChecks = function (target) {\n        return this.checks.filter(function (check) {\n            return target instanceof Array ? target.indexOf(check.target) !== -1 : check.target === target;\n        });\n    };\n    MetadataArgsStorage.prototype.filterListeners = function (target) {\n        return this.filterByTarget(this.entityListeners, target);\n    };\n    MetadataArgsStorage.prototype.filterEmbeddeds = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.embeddeds, target);\n    };\n    MetadataArgsStorage.prototype.findJoinTable = function (target, propertyName) {\n        return this.joinTables.find(function (joinTable) {\n            return joinTable.target === target && joinTable.propertyName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterJoinColumns = function (target, propertyName) {\n        // todo: implement parent-entity overrides?\n        return this.joinColumns.filter(function (joinColumn) {\n            return joinColumn.target === target && joinColumn.propertyName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterSubscribers = function (target) {\n        return this.filterByTarget(this.entitySubscribers, target);\n    };\n    MetadataArgsStorage.prototype.filterNamingStrategies = function (target) {\n        return this.filterByTarget(this.namingStrategies, target);\n    };\n    MetadataArgsStorage.prototype.filterTransactionEntityManagers = function (target, propertyName) {\n        return this.transactionEntityManagers.filter(function (transactionEm) {\n            return (target instanceof Array ? target.indexOf(transactionEm.target) !== -1 : transactionEm.target === target) && transactionEm.methodName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterTransactionRepository = function (target, propertyName) {\n        return this.transactionRepositories.filter(function (transactionEm) {\n            return (target instanceof Array ? target.indexOf(transactionEm.target) !== -1 : transactionEm.target === target) && transactionEm.methodName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterSingleTableChildren = function (target) {\n        return this.tables.filter(function (table) {\n            return table.target instanceof Function\n                && target instanceof Function\n                && MetadataUtils_1.MetadataUtils.isInherited(table.target, target)\n                && table.type === \"entity-child\";\n        });\n    };\n    MetadataArgsStorage.prototype.findInheritanceType = function (target) {\n        return this.inheritances.find(function (inheritance) { return inheritance.target === target; });\n    };\n    MetadataArgsStorage.prototype.findDiscriminatorValue = function (target) {\n        return this.discriminatorValues.find(function (discriminatorValue) { return discriminatorValue.target === target; });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Filters given array by a given target or targets.\n     */\n    MetadataArgsStorage.prototype.filterByTarget = function (array, target) {\n        return array.filter(function (table) {\n            return target instanceof Array ? target.indexOf(table.target) !== -1 : table.target === target;\n        });\n    };\n    /**\n     * Filters given array by a given target or targets and prevents duplicate property names.\n     */\n    MetadataArgsStorage.prototype.filterByTargetAndWithoutDuplicateProperties = function (array, target) {\n        var newArray = [];\n        array.forEach(function (item) {\n            var sameTarget = target instanceof Array ? target.indexOf(item.target) !== -1 : item.target === target;\n            if (sameTarget) {\n                if (!newArray.find(function (newItem) { return newItem.propertyName === item.propertyName; }))\n                    newArray.push(item);\n            }\n        });\n        return newArray;\n    };\n    return MetadataArgsStorage;\n}());\nexports.MetadataArgsStorage = MetadataArgsStorage;\n\n//# sourceMappingURL=MetadataArgsStorage.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}}],"sources":{"../node_modules/typeorm/metadata-args/MetadataArgsStorage.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MetadataUtils_1 = require(\"../metadata-builder/MetadataUtils\");\n/**\n * Storage all metadatas args of all available types: tables, columns, subscribers, relations, etc.\n * Each metadata args represents some specifications of what it represents.\n * MetadataArgs used to create a real Metadata objects.\n */\nvar MetadataArgsStorage = /** @class */ (function () {\n    function MetadataArgsStorage() {\n        // -------------------------------------------------------------------------\n        // Properties\n        // -------------------------------------------------------------------------\n        this.tables = [];\n        this.trees = [];\n        this.entityRepositories = [];\n        this.transactionEntityManagers = [];\n        this.transactionRepositories = [];\n        this.namingStrategies = [];\n        this.entitySubscribers = [];\n        this.indices = [];\n        this.uniques = [];\n        this.checks = [];\n        this.columns = [];\n        this.generations = [];\n        this.relations = [];\n        this.joinColumns = [];\n        this.joinTables = [];\n        this.entityListeners = [];\n        this.relationCounts = [];\n        this.relationIds = [];\n        this.embeddeds = [];\n        this.inheritances = [];\n        this.discriminatorValues = [];\n    }\n    MetadataArgsStorage.prototype.filterTables = function (target) {\n        return this.filterByTarget(this.tables, target);\n    };\n    MetadataArgsStorage.prototype.filterColumns = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.columns, target);\n    };\n    MetadataArgsStorage.prototype.findGenerated = function (target, propertyName) {\n        return this.generations.find(function (generated) {\n            return (target instanceof Array ? target.indexOf(generated.target) !== -1 : generated.target === target) && generated.propertyName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.findTree = function (target) {\n        return this.trees.find(function (tree) {\n            return (target instanceof Array ? target.indexOf(tree.target) !== -1 : tree.target === target);\n        });\n    };\n    MetadataArgsStorage.prototype.filterRelations = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.relations, target);\n    };\n    MetadataArgsStorage.prototype.filterRelationIds = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.relationIds, target);\n    };\n    MetadataArgsStorage.prototype.filterRelationCounts = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.relationCounts, target);\n    };\n    MetadataArgsStorage.prototype.filterIndices = function (target) {\n        // todo: implement parent-entity overrides?\n        return this.indices.filter(function (index) {\n            return target instanceof Array ? target.indexOf(index.target) !== -1 : index.target === target;\n        });\n    };\n    MetadataArgsStorage.prototype.filterUniques = function (target) {\n        return this.uniques.filter(function (unique) {\n            return target instanceof Array ? target.indexOf(unique.target) !== -1 : unique.target === target;\n        });\n    };\n    MetadataArgsStorage.prototype.filterChecks = function (target) {\n        return this.checks.filter(function (check) {\n            return target instanceof Array ? target.indexOf(check.target) !== -1 : check.target === target;\n        });\n    };\n    MetadataArgsStorage.prototype.filterListeners = function (target) {\n        return this.filterByTarget(this.entityListeners, target);\n    };\n    MetadataArgsStorage.prototype.filterEmbeddeds = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.embeddeds, target);\n    };\n    MetadataArgsStorage.prototype.findJoinTable = function (target, propertyName) {\n        return this.joinTables.find(function (joinTable) {\n            return joinTable.target === target && joinTable.propertyName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterJoinColumns = function (target, propertyName) {\n        // todo: implement parent-entity overrides?\n        return this.joinColumns.filter(function (joinColumn) {\n            return joinColumn.target === target && joinColumn.propertyName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterSubscribers = function (target) {\n        return this.filterByTarget(this.entitySubscribers, target);\n    };\n    MetadataArgsStorage.prototype.filterNamingStrategies = function (target) {\n        return this.filterByTarget(this.namingStrategies, target);\n    };\n    MetadataArgsStorage.prototype.filterTransactionEntityManagers = function (target, propertyName) {\n        return this.transactionEntityManagers.filter(function (transactionEm) {\n            return (target instanceof Array ? target.indexOf(transactionEm.target) !== -1 : transactionEm.target === target) && transactionEm.methodName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterTransactionRepository = function (target, propertyName) {\n        return this.transactionRepositories.filter(function (transactionEm) {\n            return (target instanceof Array ? target.indexOf(transactionEm.target) !== -1 : transactionEm.target === target) && transactionEm.methodName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterSingleTableChildren = function (target) {\n        return this.tables.filter(function (table) {\n            return table.target instanceof Function\n                && target instanceof Function\n                && MetadataUtils_1.MetadataUtils.isInherited(table.target, target)\n                && table.type === \"entity-child\";\n        });\n    };\n    MetadataArgsStorage.prototype.findInheritanceType = function (target) {\n        return this.inheritances.find(function (inheritance) { return inheritance.target === target; });\n    };\n    MetadataArgsStorage.prototype.findDiscriminatorValue = function (target) {\n        return this.discriminatorValues.find(function (discriminatorValue) { return discriminatorValue.target === target; });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Filters given array by a given target or targets.\n     */\n    MetadataArgsStorage.prototype.filterByTarget = function (array, target) {\n        return array.filter(function (table) {\n            return target instanceof Array ? target.indexOf(table.target) !== -1 : table.target === target;\n        });\n    };\n    /**\n     * Filters given array by a given target or targets and prevents duplicate property names.\n     */\n    MetadataArgsStorage.prototype.filterByTargetAndWithoutDuplicateProperties = function (array, target) {\n        var newArray = [];\n        array.forEach(function (item) {\n            var sameTarget = target instanceof Array ? target.indexOf(item.target) !== -1 : item.target === target;\n            if (sameTarget) {\n                if (!newArray.find(function (newItem) { return newItem.propertyName === item.propertyName; }))\n                    newArray.push(item);\n            }\n        });\n        return newArray;\n    };\n    return MetadataArgsStorage;\n}());\nexports.MetadataArgsStorage = MetadataArgsStorage;\n\n//# sourceMappingURL=MetadataArgsStorage.js.map\n"},"lineCount":154}},"hash":"bdb65625521ac297a40c9a5fe7b0ce3f","cacheData":{"env":{}}}