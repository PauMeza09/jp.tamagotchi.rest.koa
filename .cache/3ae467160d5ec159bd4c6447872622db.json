{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/co-body/package.json","includedInParent":true,"mtime":1526889834000},{"name":"raw-body","loc":{"line":7,"column":20}},{"name":"inflation","loc":{"line":8,"column":24}},{"name":"./utils","loc":{"line":9,"column":22}}],"generated":{"js":"'use strict';\n\n/**\n * Module dependencies.\n */\n\nconst raw = require('raw-body');\nconst inflate = require('inflation');\nconst utils = require('./utils');\n\n// Allowed whitespace is defined in RFC 7159\n// http://www.rfc-editor.org/rfc/rfc7159.txt\nconst strictJSONReg = /^[\\x20\\x09\\x0a\\x0d]*(\\[|\\{)/;\n\n/**\n * Return a Promise which parses json requests.\n *\n * Pass a node request or an object with `.req`,\n * such as a koa Context.\n *\n * @param {Request} req\n * @param {Options} [opts]\n * @return {Function}\n * @api public\n */\n\nmodule.exports = async function(req, opts) {\n  req = req.req || req;\n  opts = utils.clone(opts);\n\n  // defaults\n  let len = req.headers['content-length'];\n  const encoding = req.headers['content-encoding'] || 'identity';\n  if (len && encoding === 'identity') opts.length = len = ~~len;\n  opts.encoding = opts.encoding || 'utf8';\n  opts.limit = opts.limit || '1mb';\n  const strict = opts.strict !== false;\n\n  const str = await raw(inflate(req), opts);\n  try {\n    const parsed = parse(str);\n    return opts.returnRawBody ? { parsed, raw: str } : parsed;\n  } catch (err) {\n    err.status = 400;\n    err.body = str;\n    throw err;\n  }\n\n  function parse(str) {\n    if (!strict) return str ? JSON.parse(str) : str;\n    // strict mode always return object\n    if (!str) return {};\n    // strict JSON test\n    if (!strictJSONReg.test(str)) {\n      throw new Error('invalid JSON, only supports object and array');\n    }\n    return JSON.parse(str);\n  }\n};\n","map":{"mappings":[{"source":"../node_modules/co-body/lib/json.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/co-body/lib/json.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}}],"sources":{"../node_modules/co-body/lib/json.js":"'use strict';\n\n/**\n * Module dependencies.\n */\n\nconst raw = require('raw-body');\nconst inflate = require('inflation');\nconst utils = require('./utils');\n\n// Allowed whitespace is defined in RFC 7159\n// http://www.rfc-editor.org/rfc/rfc7159.txt\nconst strictJSONReg = /^[\\x20\\x09\\x0a\\x0d]*(\\[|\\{)/;\n\n/**\n * Return a Promise which parses json requests.\n *\n * Pass a node request or an object with `.req`,\n * such as a koa Context.\n *\n * @param {Request} req\n * @param {Options} [opts]\n * @return {Function}\n * @api public\n */\n\nmodule.exports = async function(req, opts) {\n  req = req.req || req;\n  opts = utils.clone(opts);\n\n  // defaults\n  let len = req.headers['content-length'];\n  const encoding = req.headers['content-encoding'] || 'identity';\n  if (len && encoding === 'identity') opts.length = len = ~~len;\n  opts.encoding = opts.encoding || 'utf8';\n  opts.limit = opts.limit || '1mb';\n  const strict = opts.strict !== false;\n\n  const str = await raw(inflate(req), opts);\n  try {\n    const parsed = parse(str);\n    return opts.returnRawBody ? { parsed, raw: str } : parsed;\n  } catch (err) {\n    err.status = 400;\n    err.body = str;\n    throw err;\n  }\n\n  function parse(str) {\n    if (!strict) return str ? JSON.parse(str) : str;\n    // strict mode always return object\n    if (!str) return {};\n    // strict JSON test\n    if (!strictJSONReg.test(str)) {\n      throw new Error('invalid JSON, only supports object and array');\n    }\n    return JSON.parse(str);\n  }\n};\n"},"lineCount":60}},"hash":"b8878096f6a0093ac7d524631542ca7b","cacheData":{"env":{}}}