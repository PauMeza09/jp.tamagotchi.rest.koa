{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000},{"name":"../QueryBuilderUtils","loc":{"line":3,"column":34}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryBuilderUtils_1 = require(\"../QueryBuilderUtils\");\nvar RelationCountAttribute = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationCountAttribute(expressionMap, relationCountAttribute) {\n        this.expressionMap = expressionMap;\n        Object.assign(this, relationCountAttribute || {});\n    }\n    Object.defineProperty(RelationCountAttribute.prototype, \"joinInverseSideMetadata\", {\n        // -------------------------------------------------------------------------\n        // Public Methods\n        // -------------------------------------------------------------------------\n        get: function () {\n            return this.relation.inverseEntityMetadata;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"parentAlias\", {\n        /**\n         * Alias of the parent of this join.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"post\" is a parent alias.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value must be a string representation of alias property\");\n            return this.relationName.split(\".\")[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"relationProperty\", {\n        /**\n         * Relation property name of the parent.\n         * This is used to understand what is joined.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"category\" is a relation property.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value is a string representation of alias property\");\n            return this.relationName.split(\".\")[1];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"junctionAlias\", {\n        get: function () {\n            var _a = this.relationName.split(\".\"), parentAlias = _a[0], relationProperty = _a[1];\n            return parentAlias + \"_\" + relationProperty + \"_rc\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"relation\", {\n        /**\n         * Relation of the parent.\n         * This is used to understand what is joined.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value is a string representation of alias property\");\n            var _a = this.relationName.split(\".\"), parentAlias = _a[0], propertyPath = _a[1];\n            var relationOwnerSelection = this.expressionMap.findAliasByName(parentAlias);\n            var relation = relationOwnerSelection.metadata.findRelationWithPropertyPath(propertyPath);\n            if (!relation)\n                throw new Error(\"Relation with property path \" + propertyPath + \" in entity was not found.\");\n            return relation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"metadata\", {\n        /**\n         * Metadata of the joined entity.\n         * If table without entity was joined, then it will return undefined.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value is a string representation of alias property\");\n            var parentAlias = this.relationName.split(\".\")[0];\n            var selection = this.expressionMap.findAliasByName(parentAlias);\n            return selection.metadata;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"mapToPropertyPropertyName\", {\n        get: function () {\n            return this.mapToProperty.split(\".\")[1];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RelationCountAttribute;\n}());\nexports.RelationCountAttribute = RelationCountAttribute;\n\n//# sourceMappingURL=RelationCountAttribute.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}}],"sources":{"../node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryBuilderUtils_1 = require(\"../QueryBuilderUtils\");\nvar RelationCountAttribute = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationCountAttribute(expressionMap, relationCountAttribute) {\n        this.expressionMap = expressionMap;\n        Object.assign(this, relationCountAttribute || {});\n    }\n    Object.defineProperty(RelationCountAttribute.prototype, \"joinInverseSideMetadata\", {\n        // -------------------------------------------------------------------------\n        // Public Methods\n        // -------------------------------------------------------------------------\n        get: function () {\n            return this.relation.inverseEntityMetadata;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"parentAlias\", {\n        /**\n         * Alias of the parent of this join.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"post\" is a parent alias.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value must be a string representation of alias property\");\n            return this.relationName.split(\".\")[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"relationProperty\", {\n        /**\n         * Relation property name of the parent.\n         * This is used to understand what is joined.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"category\" is a relation property.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value is a string representation of alias property\");\n            return this.relationName.split(\".\")[1];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"junctionAlias\", {\n        get: function () {\n            var _a = this.relationName.split(\".\"), parentAlias = _a[0], relationProperty = _a[1];\n            return parentAlias + \"_\" + relationProperty + \"_rc\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"relation\", {\n        /**\n         * Relation of the parent.\n         * This is used to understand what is joined.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value is a string representation of alias property\");\n            var _a = this.relationName.split(\".\"), parentAlias = _a[0], propertyPath = _a[1];\n            var relationOwnerSelection = this.expressionMap.findAliasByName(parentAlias);\n            var relation = relationOwnerSelection.metadata.findRelationWithPropertyPath(propertyPath);\n            if (!relation)\n                throw new Error(\"Relation with property path \" + propertyPath + \" in entity was not found.\");\n            return relation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"metadata\", {\n        /**\n         * Metadata of the joined entity.\n         * If table without entity was joined, then it will return undefined.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value is a string representation of alias property\");\n            var parentAlias = this.relationName.split(\".\")[0];\n            var selection = this.expressionMap.findAliasByName(parentAlias);\n            return selection.metadata;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"mapToPropertyPropertyName\", {\n        get: function () {\n            return this.mapToProperty.split(\".\")[1];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RelationCountAttribute;\n}());\nexports.RelationCountAttribute = RelationCountAttribute;\n\n//# sourceMappingURL=RelationCountAttribute.js.map\n"},"lineCount":107}},"hash":"303c715503a8550e3b8cae746897b4f7","cacheData":{"env":{}}}