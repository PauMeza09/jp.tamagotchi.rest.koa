{"dependencies":[{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/package.json","includedInParent":true,"mtime":1528316321058},{"name":"/mnt/data/hacking/projects/personal/jp.tamagotchi.rest.koa/node_modules/typeorm/package.json","includedInParent":true,"mtime":1526548133000},{"name":"../../","loc":{"line":3,"column":17}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\"../../\");\n/**\n * Injects transaction's entity manager into the method wrapped with @Transaction decorator.\n */\nfunction TransactionManager() {\n    return function (object, methodName, index) {\n        _1.getMetadataArgsStorage().transactionEntityManagers.push({\n            target: object.constructor,\n            methodName: methodName,\n            index: index,\n        });\n    };\n}\nexports.TransactionManager = TransactionManager;\n\n//# sourceMappingURL=TransactionManager.js.map\n","map":{"mappings":[{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeorm/decorator/transaction/TransactionManager.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"../node_modules/typeorm/decorator/transaction/TransactionManager.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\"../../\");\n/**\n * Injects transaction's entity manager into the method wrapped with @Transaction decorator.\n */\nfunction TransactionManager() {\n    return function (object, methodName, index) {\n        _1.getMetadataArgsStorage().transactionEntityManagers.push({\n            target: object.constructor,\n            methodName: methodName,\n            index: index,\n        });\n    };\n}\nexports.TransactionManager = TransactionManager;\n\n//# sourceMappingURL=TransactionManager.js.map\n"},"lineCount":19}},"hash":"a309a06847255509bc030660ec54a747","cacheData":{"env":{}}}